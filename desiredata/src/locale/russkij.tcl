#!/usr/bin/env tclsh
# русский перевод PureData (пьюр дата - англ., "чисто данные")
# by Ilya Dmitrichenko, 'errordeveloper"^at^"gmail"^dot^"com'
# $Id: russkij.tcl,v 1.1.2.1 2007-10-26 20:17:14 matju Exp $

### Menus

say file "Файл"
  say new_file "Новый файл"
  say open_file "Открыть файл..."
  say server_prefs "Настройки сервера..."
  say client_prefs "Настройки клиента..."
  say send_message "Послать сообщение..."
  say paths "Расположение расширений..."
  say close "Закрыть"
  say save "Сохранить"
  say save_as "Сохранить с именем..."
  say print "Распечатать..."
  say abort_server "О сервере"
  say quit "Покинуть программу"
  
  say canvasnew_file "Новый файл"
  say canvasopen_file "Отрыть файл..."
  say canvassave "Сохранить"
  say canvassave_as "Сохранить как..."
  say clientpdrc_editor "отредактировать .pdrc"
  say clientddrc_editor "отредактировать .ddrc"
  say canvasclose "Закрыть"
  say canvasquit "Выход"

say edit "Правка"
  say undo "Шаг назад"
  say redo "Шаг вперёд"
  say cut "Вырезать"
  say copy "Копировать"
  say paste "Вставить"
  say duplicate "Дублировать"
  say select_all "Выбрать всё"
  say clear_selection "Отменить выбор"
  say text_editor "Текстовый редактор..."
  say font "Шрифт"
  say tidy_up "Упорядочить"
  say edit_mode "Режим редактирования"
  say editmodeswitch "Режим исполнения/редактирования"
  say subpatcherize "Превратить в суб-патч"

  say canvascut "Вырезать"
  say canvascopy "Копировать"
  say canvasundo "Шаг назад"
  say canvasredo "Шаг вперёд"
  say canvaspaste "Вставить"
  say canvasduplicate "Дублировать"
  say canvasselect_all "Выбрать всё"
  say canvaseditmodeswitch "Режим исполнения/редактирования"

say view "Вид"
  say reload "Перезагрузить"
  say redraw "Обновить"
  
  say canvasreload "Перезагрузить"
  say canvasredraw "Обновить"

say find "Поиск"
  say find_again "Найти ещё"
  say find_last_error "Найти последнею ошибку"
  say string "Искать текст"
say canvasfind "Найти"
  say canvasfind_again "Найти ещё"

# contents of Put menu is Phase 5C
say put "Положить"
  say Object "Обьект"
  say Message "Сообщение"
  say Number "Номер"
  say Symbol "Символ"
  say Comment "Комментарий"
  say Graph "Пустая графа"
  say Array "Графа с данными"

say media "Мотор"
  say audio_on "ВКЛ звук"
  say audio_off "ВЫКЛ звук"
  say test_audio_and_midi "Проверка аудио и MIDI"
  say load_meter "Измеритель загруженности"

  say canvasaudio_on "ВКЛ звук"
  say canvasaudio_off "ВЫКЛ звук"
  say clienttest_audio_and_midi "Проверка звука и MIDI"
  say canvasload_meter "загруз. метр"

say window "Окна"

say help "Помощь"
  say about "О программе..."
  say documentation "Документация..."
  say class_browser "Браузер классов..."
  
  say canvasabout "О программе..."

say properties "Свойства"
say open "Открыть"

### for key binding editor
say general "Общее"
say audio_settings "Настройки звука"
say midi_settings "Настройки MIDI"
say latency_meter "Измеритель опозданий"
say Pdwindow "Основное окно"

say canvaspdwindow "Основное окно"
say canvaslatency_meter "Измеритель задержек"
say clientaudio_settings "Настройки аудио"
say clientmidi_settings "Настройки MIDI"

### for Properties Dialog (phase 5B)
say_category IEM
say w "ширина, px"
say h "высота, px"
say hold "время удержки, мс"
say break "break time, мс"
say min "наименьшее значение"
say max "наибольшее значение"
say is_log "режим"
say linear "линейный"
say logarithmic "логорифмичекий"
say isa "init"
say n "колличество вариантов"
say steady "стойкость"
say steady_no  "сдвиг при клике"
say steady_yes "стойкий при клике"
say snd "отправлять с символом"
say rcv "получать по сиволу"
say lab "название"
say ldx "смещение названия Х"
say ldy "смещение названия У"
say fstyle "шрифт"
say fs "размер шрифта"
say bcol "цвет фона"
say fcol "основной цвет"
say lcol "цвет названия"
say yes "да"
say no "нет"
say courier "courier (typewriter)"
say helvetica "helvetica (sansserif)"
say times "times (serif)"
say coords "graph on parent"

say_category GAtomProperties
say width "ширина"
say lo "нижний предел"
say hi "верхний предел"
say label "обозначение"
say wherelabel "отображать"
say symto "отправлять с символом"
say symfrom "получать по сиволу"

say_category GraphProperties
say x1   "значения x с"
say x2   "x до"
say xpix "ширина"
say y2   "значения y с"
say y1   "y до"
say ypix "высота"

say_category CanvasProperties
#say xscale "X units/px"
#say yscale "Y units/px"
say gop "graph on parent"
say xmargin "предел по оси X"
say ymargin "предел по оси Y"
say height "высота"
say_category ArrayProperties
say name "название"
say n    "размер"
say xfrom "значения x с"
say xto "значения x до"
say yfrom "значения у с"
say yto "значения у до"


say_category MainWindow
say in "вход"
say out "выход"
say audio "Аудио"
say meters "Уровни"
say io_errors "Ошибки на входе и выходе"
say tcl_console "клиент Tcl"
say pd_console "pd сервер"

### phase 2

say_category Other
say_namespace summary {
  say_category IEMGUI
  say bng    "Bang Box"
  say tgl    "Toggle Box"
  say nbx    "Number Box (IEM)"
  say hsl    "Slider (Горизонтальный)"
  say vsl    "Slider (Вертикальный)"
  say hradio "Choice Box (Горизонтальный)"
  say vradio "Choice Box (Вертикальный)"
  say cnv    "Полотно (IEM)"
  say dropper "Drag-and-Drop Box"
  say vu     "Уровень громкости (VU-meter)"

  say_category GLUE
  say bang "выдать 'bang'"
  say float "store and recall a number"
  say symbol "store and recall a symbol"
  say int "сохранить число"
  say send "отсылка сообсчений с символы"
  say receive "приём отосланных сообсчений по символу"
  say select "test for matching numbers or symbols"
  say route "route messages according to first element"
  say pack "make compound messages"
  say unpack "get elements of compound messages"
  say trigger "sequence and convert messagess"
  say spigot "прерываемый поток сообщений"
  say moses "разбить поток чисел"
  say until "механизм кругового действия"
  say print "текстовый вывод"
  say makefilename "создать текст с переменными полями"
  say change "убрать повторяющееся число из потока"
  say swap "поменять два числа местами"
  say value "сохранить обсщедоступную переменную с заданным именем"

  say_category TIME
  say delay "выдавать соовщение с заданной задержкой"
  say metro "выдавать переодическое соовщение с заданным интервалом"
  say line "выдать линейную прогрессию"
  say timer "отмерить временной промеуток"
  say cputime "отмерить промежуток по процесорному времени"
  say realtime "отмерить реальный временной промежуток"
  say pipe "динамически нарастающий накопитель чисел с задержкой вывода"

  say_category MATH
  say + "сумма"
  say - "разность"
  say * "произведение"
  say {/ div} "частное"
  say {% mod} "деление с остатком"
  say pow "возвести в стапань"
  say == "равно?"
  say != "не равно?"
  say > "больше?"
  say < "меньше?"
  say >= "не меньше?"
  say <= "не больше?"
  say &  "bitwise conjunction (and)"
  say |  "bitwise disjunction (or)"
  say && "logical conjunction (and)"
  say || "logical disjunction (or)"
  say mtof "MIDI > Герцы"
  say ftom "Герцы > MIDI"
  say powtodb "Ватты > dB"
  say dbtopow "dB > Ватты"
  say rmstodb "Вольты > dB"
  say dbtorms "dB > Вольты"
  say {sin cos tan atan atan2 sqrt} "Тригонометрические функции"
  say log "Натуральный логоритм"
  say exp "Экспонента Эвлера"
  say abs "Значение по модулю"
  say random "Случайное число"
  say max "Наибольшее из двух"
  say min "Наименьшее из дцух"
  say clip "Ограничить значения в потоке чисел"

  say_category MIDI
  say {notein ctlin pgmin bendin touchin polytouchin midiin sysexin} "MIDI вход"
  say {noteout ctlout pgmout bendout touchout polytouchout midiout}  "MIDI выход"
  say makenote "schedule a delayed \"note off\" message corresponding to a note-on"
  say stripnote "strip \"note off\" messages"

  say_category TABLES
  say tabread "получить значение из таблицы (по индексу)"
  say tabread4 "read a number from a table, with 4 point interpolation"
  say tabwrite "вписать значение в таблицу"
  say soundfiler "считывать аудио-файл в/из таблиц"

  say_category MISC
  say loadbang "выдать 'bang' при загрузке"
  say serial "доступ к серийному порту (только в NT)"
  say netsend "посылать сообщения по сети (по TCP или UDP)"
  say netreceive "получать сообщения из сети (по TCP или UDP)"
  say qlist "message sequencer"
  say textfile "file to message converter"
  say openpanel "диалоговое окно \"Открыть\""
  say savepanel "диалоговое окно \"Save as\""
  say bag "набор чисел"
  say poly "полифонизатор"
  say {key keyup} "числовые значения клавиш клавиатуры"
  say keyname "именные значения клавиш"

  say_category "AUDIO MATH"
  foreach word {+ - * /} {say $word~ "[say $word] (для сигналов)"}
  say max~ "supremum of signals"
  say min~  "infimum of signals"
  say clip~ "ограничить амплитуду сигнала"
  say q8_rsqrt~ "упрощенный алгоритм (8 бит) обратного квадратного корня"
  say q8_sqrt~ "упрощенный алгоритм (8 бит) квадратного корня"
  say wrap~ "wraparound (fractional part, sort of)"
  say fft~ "complex forward discrete Fourier transform"
  say ifft~ "complex inverse discrete Fourier transform"
  say rfft~ "real forward discrete Fourier transform"
  say rifft~ "вещественный обратный  inverse discrete Fourier transform"
  say framp~ "output a ramp for each block"
  foreach word {mtof ftom rmstodb dbtorms rmstopow powtorms} {
    say $word~ "[say $word] (for signals)"
  }
}

### phase 3

say_namespace summary {
  say_category GLUE
  say dac~ "аудио выход"
  say adc~ "аудио вход"
  say sig~ "превратить число в сигнал"
  say line~ "generate audio ramps"
  say vline~ "улучшенный line~"
  say threshold~  "detect signal thresholds"
  say snapshot~ "семплироавть сигнал (представить в виде числа)"
  say vsnapshot~ "улучшенный snapshot~"
  say bang~ "посылать 'bang' с каждым аудио-блоком"
  say samplerate~ "узнать частоту дискретизации"
  say send~ "отослать сигнал для удалённого приёма"
  say receive~ "получить отосланный сигнал"
  say throw~ "отослать сигнал в суммарный канал"
  say catch~ "считывать с суммарного канала"
  say block~ "размер аудио-блока и нахлестки"
  say switch~ "switch DSP computation on and off"
  say readsf~ "чтение с диска"
  say writesf~ "запись на диск"

  say_category "AUDIO OSCILLATORS AND TABLES"
  say phasor~ "генератор пилообразного сигнала"
  say {cos~ osc~} "генератор синусодального сигнала"
  say tabwrite~ "писать сигнал в таблицу"
  say tabplay~ "play back from a table (non-transposing)"
  say tabread~ "non-interpolating table read"
  say tabread4~ "four-point interpolating table read"
  say tabosc4~ "табличный вибратор"
  say tabsend~ "постоянно вписывать блок в таблицу"
  say tabreceive~ "постоянно считывать блок из таблицы"

  say_category "AUDIO FILTERS"
  say vcf~ "фильтр контролирумый напряжением"
  say noise~ "генератор \"белого\" шума"
  say env~ "envelope follower"
  say hip~ "high pass filter"
  say lop~ "low pass filter"
  say bp~ "band pass filter"
  say biquad~ "raw filter"
  say samphold~ "sample and hold unit"
  say print~ "print out one or more \"blocks\""
  say rpole~ "raw real-valued one-pole filter"
  say rzero~ "raw real-valued one-zero filter"
  say rzero_rev~ "[say rzero~] (time-reversed)"
  say cpole~ "[say rpole~] (комплексный)"
  say czero~ "[say rzero~] (комплексный)"
  say czero_rev~ "[say rzero_rev~] (комплексный)"

  say_category "AUDIO DELAY"
  say delwrite~ "write to a delay line"
  say delread~ "read from a delay line"
  say vd~ "read from a delay line at a variable delay time"

  say_category "SUBWINDOWS"
  say pd "новое окно"
  say table "таблица в новом окне"
  say inlet "добавляет впуск"
  say outlet "добавляет выпуск"
  say  inlet~  "[say inlet] (для сигналов)"
  say outlet~ "[say outlet] (для сигналов)"

  say_category "DATA TEMPLATES"
  say struct "define a data structure"
  say {drawcurve filledcurve} "начертить кривую"
  say {drawpolygon filledpolygon} "начертить многоугольник"
  say plot "plot an array field"
  say drawnumber "print a numeric value"

  say_category "Доступ к данным"
  say pointer "указать на объект в шаблоне"
  say get "получить численное значение"
  say set "изменить численное значение"
  say element "получить значение из таблицы"
  say getsize "получить размер таблицы"
  say setsize "изменить размер таблицы"
  say append "добавить к списку"
  say sublist "get a pointer into a list which is an element of another scalar"
  say scalar "draw a scalar on parent"
  
  say_category "Ныне отсутсвующее"
  say scope~ "(теперь используется tabwrite~)"
  say namecanvas "именовать полотно" ;# what was this anyway?
  say template "(теперь используется struct)"
}

# phase 4 (pdrc & ddrc)

say section_audio "Audio"
  say -r "частота дискретизации"
  say -audioindev "аудио вход"
  say -audiooutdev "аудио выход"
  say -inchannels "кол-во входных каналов (в соответствии с устройствами, на пример: \"2\" или \"16,8\")"
  say -outchannels "кол-во выходных каналов"
  say -audiobuf "размер сигнального буфера (милисек)"
  say -blocksize "указать размер аудио-блока в сэмпл-фреймах"
  say -sleepgrain "указать время (милисек) для перехода в режим сна когда неактивен"
  say -nodac "предотвратить звук на входе (при запуске)"
  say -noadc "предотвратить звук на выходе (при запуске)"
  say audio_api_choice "Выбор аудио API"
    say default "по умолчанию"
    say -alsa "использовать ALSA аудио API"
    say -jack "использовать JACK аудио API"
    say -mmio "использовать MMIO API (в Windows, по-умолчанию)"
    say -portaudio "использовать дарйвера ASIO (при помощи Portaudio)"
    say -oss "использовать OSS аудио API"
  say -32bit "включить 32-битный режим аудио (OSS, для карт RME Hammerfall)"
  say {} "по умолчанию"

say section_midi "MIDI"
  say -nomidiin "предотвратить MIDI вход"
  say -nomidiout "предотвратить MIDI выход"
  say -midiindev  "midi in device list; e.g., \"1,3\" for first and third"
  say -midioutdev "midi out device list, same format"

say section_externals "Расширения"
  say -path     "путь поиска файлов"
  say -helppath "путь поиска вспомогательных примеров"
  say -lib      "загрузить библиотеку (по имени)"

say section_gui "Графический интерфейс"
  say -nogui "отключит графический интерфейс"
  say -guicmd "запуск с использованием иной программы (например: rsh или ssh)"
  say -look "иконки на панельке"
  say -font "размер шрифта в точках"

say section_other "Остальное"
  say -open "открыть файл(ы) при запуске"
  say -verbose "вывод дополнительной информации"
  say -d "уровень debug"
  say -noloadbang "отключить действие \[loadbang\]"
  say -send "послать сообсчение при запуске (как только все патчи загружены)"
  say -listdev "вывод доступных аудио и MIDI устройств"
  say -realtime "исполнение в \"реальном времени\" (требует привелегий спец-пользователя)"

say section_paths "Путь"

# phase 4B: ddrc (keyword names not finalized!)
say console "колличество полос памяти на консоли (0 = отключить консоль)"
say lang "язык"
say pointer_sense "чувствительность курсора"
say section_color "вид"
 say canvas_color "полотно"
  say canvasbgedit "цвет фона в режиме редактора"
  say canvasbgrun "цвет фона в режиме исполнения"
 say object_color "объект"
  say viewframe1 "цвет рамки"
  say viewframe2 "цвет рамки"
  say viewframe3 "цвет рамки"
  say viewframe4 "цвет выделенной рамки"
  say viewbg "цвет фона объекта"
  say viewfg "основной цвет объекта"
  say commentbg "фон комментария"
  say commentfg "цвет текста комментария"
  say commentframe1 "рамка комментария"
  say commentframe2 "рамка комментария"
  say commentframe3 "рамка комментария"
  say viewselectframe "выделенная рамка"
 say wire_color "провод"
  say wirefg "цвет провода"
  say wirefg2 "выделенный провод"
  say wiredspfg "цвет провода несущего сигнал"
  say futurewiredash "новый провод (пунктиром)"
 say others_color "другое"
  say boxinletfg "цвет inlet"
  say boxoutletfg "цвет outlet"
  say selrectrect "выделение"
say keys "клавиши"
say others "другие"
say hairstate "включить крестик (crosshair)"
say hairsnap "crosshair snap to object"
say statusbar "включить строку статуса"
say buttonbar "включить панельку кнопок"
say menubar "включить менюшку"
say scrollbar "включить автопромотку"
say wirearrow "wire стрелка"
say tooltip "подсказки"
say insert_object "Вставить объект"
say chain_object "Цепочка оьектов"
say clear_wires "Прибрать провода"
say auto_wire "Удалить объект"
say subpatcherize "Превратить в суб-патч"
say keynav "Навигация припомощи клавиатуры"
say key_nav_up "вверх"
say key_nav_up_shift "выделение с добавкой"
say key_nav_down "вниз"
say key_nav_down_shift "выделение с добавкой"
say key_nav_right "направо"
say key_nav_right_shift "выделение с добавкой"
say key_nav_left "налево"
say key_nav_left_shift "выделение с добавкой"
say key_nav_ioselect "select in/outlets"
# phase 5A

say cannot "Не получается .."
say cancel "Сброс"
say apply  "Применить"
say ok     "Окей"
say popup_open "Открыть"
say popup_insert "Вставить"
say popup_properties "Свойства"
say popup_clear_wires "Прибрать провода"
say popup_remove_from_path "Remove object from path"
say popup_delete_from_path "Delete object from path"
say popup_help "Помощь"
say filter "Фильтровать: "
say how_many_object_classes "%d из %d классов объектов"
say do_what_i_mean "Сделай всё!"
say ask_cool "Было бы круто добавить такой наворот! Не так ли?"
say save_changes? "Сохранить?"
say reset "Сброс"
say Courier "Courier (monospaced)"
say Helvetica "Helvetica (sansserif)"
say Times "Times (serif)"
say add "Добавить"
say up "Вверх"
say down "Вниз"
say remove "Удалить"
say lib_add    "добавить к списку"
say lib_up     "поменять местами с предыдущей библиотекой"
say lib_down   "поменять местами со следующей библиотекой"
say lib_remove "удалить выбранную библиотеку"
say dir_add    "указать местонахождения"
say dir_up     "поменять местами с предыдущей папкой"
say dir_down   "поменять местами со следующей папкой"
say dir_remove "удалить из списка"
say client_class_tree "Дерево классов"
say clipboard_view "Clipboard View"
say command_history_view "Просмотр истории команд"
say event_history_view "Просмотр истории событий"

# during/after piksel:

say auto_apply "Автопримение"
say font_preview "Просмотр:"
say font_preview_2 "ABCDEFGHIJKLMNOPQRSTUVWXYZ\nabcdefghijklmnopqrstuvwxyz\n0123456789"
say font_style "Стиль:"
say font_bold "Жирный"
say font_italic "Курсивом"
say font_family "Название:"
say font_size "Размер:"
say damn "Эх!"
# say damn "Нах!"
# say damn "Тьфу! Да ну тебя!"
say console_clear "Очистить консоль"
say horizontal "Горизонталь"
say vertical "Вертикаль"
say language "Язык"

# 2007:

say no_matches "(совпадений нет)"
say preset "preset"
say canvasgrid "цвет клеток"
say grid_size "размер клеточки"
say gridstate "показать клеточки"
say snap_grid "подгонка под клетки"
say viewfont "шрифт имён объектов"
say consolefont "консольный шрифт"
say keyboarddialogfont "шрифт разметки виртуальной клавиатуры"
say keyboard_view "Виртуальные клавиши"
