#!/usr/bin/env tclsh
# Turkish translations for PureData
# $Id: turkce.tcl,v 1.1.2.1 2007-10-05 23:14:23 matju Exp $
# by Koray Tahiroglu

### Menus

say file "Dosya"
  say new_file "Yeni"
  say open_file "Aç..."
  say server_prefs "Sunucu Tercihleri..."
  say client_prefs "Kullanıcı Tercihleri..."
  say send_message "Mesajı Gönder..."
  say paths "Yollar..."
  say close "Kapat"
  say save "Kaydet"
  say save_as "Farklı Kaydet..."
  say print "Yazdır..."
  say abort_server "Sunucuyu Durdur"
  say quit "Çıkış"
  
  say canvasnew_file "Yeni"
  say canvasopen_file "Aç..."
  say canvassave "Kaydet"
  say canvassave_as "Farklı Kaydet..."
  say clientpdrc_editor ".pdrc Düzenleyicisi"
  say clientddrc_editor ".ddrc Düzenleyicisi"
  say canvasclose "Kapat"
  say canvasquit "Çıkış"

say edit "Düzen"
  say undo "Geri Al"
  say redo "Yeniden Yap"
  say cut "Kes"
  say copy "Kopyala"
  say paste "Yapıştır"
  say duplicate "Çoğalt"
  say select_all "Tümünü Seç"
  say clear_selection "Seçimi Kaldır"
  say text_editor "Not Defteri..."
  say font "Yazı Tipi"
  say tidy_up "Derle Toparla"
  say edit_mode "Düzenleme Durumu"
  say editmodeswitch "Düzenleme/Çalıştırma Durumu"
  say subpatcherize "Alt-Bağlantı"

  say canvascut "Kes"
  say canvascopy "Kopyala"
  say canvasundo "Geri Al"
  say canvasredo "Yeniden Yap"
  say canvaspaste "Yapıştır"
  say canvasduplicate "Çoğalt"
  say canvasselect_all "Tümünü Seç"
  say canvaseditmodeswitch "Düzenleme/Çalıştırma Durumu"

say view "Görünüm"
  say reload "Yeniden Yükle"
  say redraw "Yeniden Çiz"
  
  say canvasreload "Yeniden Yükle"
  say canvasredraw "Yeniden Çiz"

say find "Bul"
  say find_again "Sonrakini Bul"
  say find_last_error "En Son Hatayı Bul"
  say string "Diziyi Bul"
say canvasfind "Bul"
  say canvasfind_again "Sonrakini Bul"

# contents of Put menu is Phase 5C
say put "Yerleştir"
  say Object "Nesne"
  say Message "Mesaj"
  say Number "Sayı"
  say Symbol "Simge"
  say Comment "Not"
  say Graph "Grafik"
  say Array "Dizilim"

say media "Ortam"
  say audio_on "Ses Aç"
  say audio_off "Ses Kapat"
  say test_audio_and_midi "Ses ve MIDI Testi"
  say load_meter "Ölçeri Yükle"

  say canvasaudio_on "Ses Aç"
  say canvasaudio_off "Ses Kapat"
  say clienttest_audio_and_midi "Ses ve MIDI Testi"
  say canvasload_meter "Ölçeri Yükle"

say window "Pencere"

say help "Yardım"
  say about "Hakkında..."
  say documentation "Belgeleme..."
  say class_browser "Sınıf Gözatıcısı..."
  
  say canvasabout "Hakkında..."

say properties "Özellikler"
say open "Aç"

### for key binding editor
say general "Genel"
say audio_settings "Ses Ayarları"
say midi_settings "Midi Ayarları"
say latency_meter "Gecikme Ölçeri"
say Pdwindow "Pd penceresi"

say canvaspdwindow "Pd penceresi"
say canvaslatency_meter "Gecikme Ölçeri"
say clientaudio_settings "Ses Ayarları"
say clientmidi_settings "Midi Ayarları"

### for Properties Dialog (phase 5B)
say_category IEM
say w "genişlik(px)"
say h "yükseklik(px)"
say hold "tutma zamanı(ms)"
say break "kesme zamanı(ms)"
say min "en az değer"
say max "en fazla değer"
say is_log "durum"
say linear "doğrusal"
say logarithmic "logaritmik"
say isa "init"
say n "seçenek sayısı"
say steady "kararlı"
say steady_no  "tıklama ile sıçra"
say steady_yes "tıklama ile kararli ol"
say snd "simge-gönder"
say rcv "simge-al"
say lab "Etiket"
say ldx "Etiket x kaydır"
say ldy "Etiket y kaydır"
say fstyle "Yazı Biçimi"
say fs "Yazitippi boyutu"
say bcol "arkaplan rengi"
say fcol "önalan rengi"
say lcol "Etiket rengi"
say yes "evet"
say no "hayır"
say courier "courier (typewriter)"
say helvetica "helvetica (sansserif)"
say times "times (serif)"
say coords "üstteki grafik"

say_category GAtomÖzellikleri
say width "genişlik"
say lo "alt sınır"
say hi "üst sınır"
say label "etiket"
say wherelabel "etiket göster"
say symto "simge gönder"
say symfrom "simge al"

say_category GrafikÖzellikleri
say x1   "x'den"
say x2   "x'e"
say xpix "görüntü alanı genişliği"
say y2   "y'den"
say y1   "y'e"
say ypix "görüntü alanı yükselkiği"

say_category KanavaÖzellikleri
#say xscale "X birim/px"
#say yscale "Y birim/px"
say gop "üstteki grafik"
say xmargin "x-kenar boşluğu"
say ymargin "y-kenar boşluğu"
say height "yükseklik"
say_category DizilimÖzellikleri
say name "adı"
say n    "boyutu"
say xfrom "x aralığından"
say xto "x aralığına"
say yfrom "y aralığından"
say yto "y aralığına"


say_category AnaPencere
say in "giriş"
say out "çıkış"
say audio "Ses"
say meters "Ölçerler"
say io_errors "IO Hataları"
say tcl_console "Tcl Kullanıcısi"
say pd_console "Pd Sunucusu"

### phase 2

say_category Diğer
say_namespace özet {
  say_category IEMGUI
  say bng    "Patlama Kutusu"
  say tgl    "Düğme Kutusu"
  say nbx    "Sayı Kutusu (IEM)"
  say hsl    "Kaydırıcı (yatay)"
  say vsl    "Kaydırıcı (düşey)"
  say hradio "Seçme Kutusu (yatay)"
  say vradio "Seçme Kutusu (düşey)"
  say cnv    "Kanava (IEM)"
  say dropper "Taşı-ve-Bırak Kutusu"
  say vu     "Vumeter"

  say_category GLUE
  say bang "patlama mesajı ver"
  say float "sayıyı sakla ve yeniden çağır"
  say symbol "simgeyi sakla ve yeniden çağır"
  say int "tamsayıyı sakla ve yeniden çağır"
  say send "isimlendirilmiş bir nesneye mesaj gönder"
  say receive "gönderilen mesajları al"
  say select "eşleşen sayı ve simgeler için test"
  say route "ilk öğelerine göre mesajları yönlendir"
  say pack "make bileşik mesajlar oluştur"
  say unpack "get elements of compound messages"
  say trigger "mesajları sırala ve dönüştür"
  say spigot "kesilebilir mesaj bağlantısı"
  say moses "sayısal akımı ayır"
  say until "döngü meaknizması"
  say print "mesajları yazdır"
  say makefilename "simgeyi bir değişken alanı ile biçimlendir"
  say change "tekrar edilen sayıları akımdan ayır"
  say swap "iki sayıyı takas et"
  say value "paylaşılan sayısal değer"

  say_category ZAMAN
  say delay "zaman geciktirmesi sonunda mesaj gönder"
  say metro "belirli aralıklarla mesaj gönder"
  say line "send a series of linearly stepped numbers"
  say timer "zaman aralıklarını hesapla"
  say cputime "CPU zamanını hesapla"
  say realtime "gerçek zamanı hesapla"
  say pipe "sayılar için dinamik olarak büyüyen gecikme hattı"

  say_category MATEMATİK
  say + "topla"
  say - "çıkart"
  say * "çarp"
  say {/ div} "böl"
  say {% mod} "bölümden kalan"
  say pow "üs al"
  say == "eşit?"
  say != "eşit değil?"
  say > "büyük?"
  say < "küçük?"
  say >= "küçük değil?"
  say <= "büyük değil?"
  say &  "bit olarak birleşme (and)"
  say |  "bit olarak ayırtım (or)"
  say && "mantıksal birleşme (and)"
  say || "mantıksal ayırtım (or)"
  say mtof "MIDI'den Hertz'e"
  say ftom "Hertz'den MIDI'ye"
  say powtodb "Watts'dan dB'e"
  say dbtopow "dB'den Watts'a"
  say rmstodb "Gerilimden dB'e"
  say dbtorms "dB'den Gerilime"
  say {sin cos tan atan atan2 sqrt} "trigonometri"
  say log "Euler logaritma"
  say exp "Euler Üssel"
  say abs "mutlak değer"
  say random "rasgele"
  say max "iki sayının en büyüğü"
  say min "iki sayının en küçüğü"
  say clip "sayıyı belirli bir değer aralığına indirge"

  say_category MIDI
  say {notein ctlin pgmin bendin touchin polytouchin midiin sysexin} "MIDI giriş"
  say {noteout ctlout pgmout bendout touchout polytouchout midiout}  "MIDI çıkış"
  say makenote " note-on a uygun olarak gecikmeli bir \"note off\" mesajı düzenle"
  say stripnote "strip \"note off\" mesajı"

  say_category TABLOLAR
  say tabread "tablodan bir sayı oku"
  say tabread4 "tablodan 4 noktalı aradeğerleme ile sayı oku"
  say tabwrite "tabloya bir sayı yaz"
  say soundfiler "tabloları ses dosyalarına yaz ve oku"

  say_category MISC
  say loadbang "yüklendiği zaman patlama gönder"
  say serial "yalnızca NT için dizisel aygıt kontrolü"
  say netsend "internet üzerinden mesaj gönder"
  say netreceive "internet üzerinden mesaj al"
  say qlist "mesaj ardıştırıcısı"
  say textfile "dosyayı mesaja çevirici"
  say openpanel "\"Aç\" diyalog"
  say savepanel "\"Farklı Kaydet\" diyalog"
  say bag "sayılar kümesi"
  say poly "çoksesli ses ayırması"
  say {key keyup} "klavyeden sayısal tuş değerleri"
  say keyname "simgelsel tuş ismi"

  say_category "Ses Matematiği"
  foreach word {+ - * /} {say $word~ "[say $word] (sinyaller için)"}
  say max~ "sinyallerin enyükseği"
  say min~  "sinyallerin en düşüğü"
  say clip~ "sinyalin iki sınır arasında yer almasının sağlanması"
  say q8_rsqrt~ "indirimli ters karekökü (dikkat -- 8 bits!)"
  say q8_sqrt~ "ndirimli karekök (dikkat -- 8 bits!)"
  say wrap~ "wraparound (fractional part, sort of)"
  say fft~ "complex forward discrete Fourier transform"
  say ifft~ "complex inverse discrete Fourier transform"
  say rfft~ "real forward discrete Fourier transform"
  say rifft~ "real inverse discrete Fourier transform"
  say framp~ "output a ramp for each block"
  foreach word {mtof ftom rmstodb dbtorms rmstopow powtorms} {
    say $word~ "[say $word] (for signals)"
  }
}

### phase 3

say_namespace summary {
  say_category "AUDIO GLUE"
  say dac~ "audio output"
  say adc~ "audio input"
  say sig~ "convert numbers to audio signals"
  say line~ "generate audio ramps"
  say vline~ "deluxe line~"
  say threshold~  "detect signal thresholds"
  say snapshot~ "sample a signal (convert it back to a number)"
  say vsnapshot~ "deluxe snapshot~"
  say bang~ "send a bang message after each DSP block"
  say samplerate~ "get the sample rate"
  say send~ "nonlocal signal connection with fanout"
  say receive~ "get signal from send~"
  say throw~ "add to a summing bus"
  say catch~ "define and read a summing bus"
  say block~ "specify block size and overlap"
  say switch~ "switch DSP computation on and off"
  say readsf~ "soundfile playback from disk"
  say writesf~ "record sound to disk"

  say_category "AUDIO OSCILLATORS AND TABLES"
  say phasor~ "sawtooth oscillator"
  say {cos~ osc~} "cosine oscillator"
  say tabwrite~ "write to a table"
  say tabplay~ "play back from a table (non-transposing)"
  say tabread~ "non-interpolating table read"
  say tabread4~ "four-point interpolating table read"
  say tabosc4~ "wavetable oscillator"
  say tabsend~ "write one block continuously to a table"
  say tabreceive~ "read one block continuously from a table"

  say_category "AUDIO FILTERS"
  say vcf~ "voltage controlled filter"
  say noise~ "white noise generator"
  say env~ "envelope follower"
  say hip~ "high pass filter"
  say lop~ "low pass filter"
  say bp~ "band pass filter"
  say biquad~ "raw filter"
  say samphold~ "sample and hold unit"
  say print~ "print out one or more \"blocks\""
  say rpole~ "raw real-valued one-pole filter"
  say rzero~ "raw real-valued one-zero filter"
  say rzero_rev~ "[say rzero~] (time-reversed)"
  say cpole~ "[say rpole~] (complex-valued)"
  say czero~ "[say rzero~] (complex-valued)"
  say czero_rev~ "[say rzero_rev~] (complex-valued)"

  say_category "AUDIO DELAY"
  say delwrite~ "write to a delay line"
  say delread~ "read from a delay line"
  say vd~ "read from a delay line at a variable delay time"

  say_category "SUBWINDOWS"
  say pd "define a subwindow"
  say table "array of numbers in a subwindow"
  say inlet "add an inlet to a pd"
  say outlet "add an outlet to a pd"
  say  inlet~  "[say inlet] (for signal)"
  say outlet~ "[say outlet] (for signal)"

  say_category "DATA TEMPLATES"
  say struct "define a data structure"
  say {drawcurve filledcurve} "draw a curve"
  say {drawpolygon filledpolygon} "draw a polygon"
  say plot "plot an array field"
  say drawnumber "print a numeric value"

  say_category "ACCESSING DATA"
  say pointer "point to an object belonging to a template"
  say get "get numeric fields"
  say set "change numeric fields"
  say element "get an array element"
  say getsize "get the size of an array"
  say setsize "change the size of an array"
  say append "add an element to a list"
  say sublist "get a pointer into a list which is an element of another scalar"
  say scalar "draw a scalar on parent"
  
  say_category "OBSOLETE"
  say scope~ "(use tabwrite~ now)"
  say namecanvas "" ;# what was this anyway?
  say template "(use struct now)"
}

# phase 4 (pdrc & ddrc)

say section_audio "Audio"
  say -r "sample rate"
  say -audioindev "audio in devices"
  say -audiooutdev "audio out devices"
  say -inchannels "audio input channels (by device, like \"2\" or \"16,8\")"
  say -outchannels "number of audio out channels (same)"
  say -audiobuf "specify size of audio buffer in msec"
  say -blocksize "specify audio I/O block size in sample frames"
  say -sleepgrain "specify number of milliseconds to sleep when idle"
  say -nodac "suppress audio output"
  say -noadc "suppress audio input"
  say audio_api_choice "Audio API"
    say default "default"
    say -alsa "use ALSA audio API"
    say -jack "use JACK audio API"
    say -mmio "use MMIO audio API (default for Windows)"
    say -portaudio "use ASIO audio driver (via Portaudio)"
    say -oss "use OSS audio API"
  say -32bit "allow 32 bit OSS audio (for RME Hammerfall)"
  say {} "default"

say section_midi "MIDI"
  say -nomidiin "suppress MIDI input"
  say -nomidiout "suppress MIDI output"
  say -midiindev  "midi in device list; e.g., \"1,3\" for first and third"
  say -midioutdev "midi out device list, same format"

say section_externals "Externals"
  say -path     "file search path"
  say -helppath "help file search path"
  say -lib      "load object libraries"

say section_gui "Gooey"
  say -nogui "suppress starting the GUI (caution)"
  say -guicmd "substitute another GUI program (e.g., rsh)"
  say -look "buttonbar icons"
  say -font "specify default font size in points"

say section_other "Other"
  say -open "open file(s) on startup"
  say -verbose "extra printout on startup and when searching for files"
  say -d "debug level"
  say -noloadbang "disable the effect of \[loadbang\]"
  say -send "send a message at startup (after patches are loaded)"
  say -listdev "list audio and MIDI devices upon startup"
  say -realtime "use real-time priority (needs root privilege)"

say section_paths "Paths"

# phase 4B: ddrc (keyword names not finalized!)
say console "console scrollback lines (0 = disable console)"
say lang "Language to use"
say pointer_sense "Mouse pointer sensitivity"
say section_color "Apparences"
 say canvas_color "canvas"
  say canvasbgedit "canvas background (edit mode)"
  say canvasbgrun "canvas background (run mode)"
 say object_color "object"
  say viewframe1 "objectbox color"
  say viewframe2 "objectbox color"
  say viewframe3 "objectbox color"
  say viewframe4 "objectbox highlight color"
  say viewbg "object background"
  say viewfg "object foreground"
  say commentbg "comment background"
  say commentfg "comment forground"
  say commentframe1 "comment frame"
  say commentframe2 "comment frame"
  say commentframe3 "comment frame"
  say viewselectframe "hilight box"
 say wire_color "wire"
  say wirefg "wire color"
  say wirefg2 "wire highlight"
  say wiredspfg "dsp wire color"
  say futurewiredash "new (dashed) wire"
 say others_color "others"
  say boxinletfg "inlet color"
  say boxoutletfg "outlet color"
  say selrectrect "selection box"
say keys "keys"
say others "others"
say hairstate "Activate crosshair"
say hairsnap "Crosshair snap to object"
say statusbar "Activate statusbar"
say buttonbar "Activate buttonbar"
say menubar "Activate menubar"
say scrollbar "Active auto scrollbar"
say wirearrow "Wire Arrow"
say tooltip "ToolTip"
say insert_object "Insert object"
say chain_object "Chain object"
say clear_wires "Clear wires"
say auto_wire "Remove object"
say subpatcherize "Subpatcherize"
say keynav "keyboard navigation"
say key_nav_up "move up"
say key_nav_up_shift "plus select"
say key_nav_down "move down"
say key_nav_down_shift "plus select"
say key_nav_right "move right"
say key_nav_right_shift "plus select"
say key_nav_left "move left"
say key_nav_left_shift "plus select"
say key_nav_ioselect "select in/outlets"
# phase 5A

say cannot "can't"
say cancel "Cancel"
say apply  "Apply"
say ok     "OK"
say popup_open "Open"
say popup_insert "Insert"
say popup_properties "Properties"
say popup_clear_wires "Clear wires"
say popup_remove_from_path "Remove object from path"
say popup_delete_from_path "Delete object from path"
say popup_help "Help"
say filter "Filter: "
say how_many_object_classes "%d of %d object classes"
say do_what_i_mean "Do What I Mean"
say ask_cool "This would be a cool feature, eh?"
say save_changes? "Save changes?"
say reset "Reset"
say Courier "Courier (monospaced)"
say Helvetica "Helvetica (sansserif)"
say Times "Times (serif)"
say add "Add"
say up "Up"
say down "Down"
say remove "Remove"
say lib_add    "add the name you typed to the list"
say lib_up     "swap order with previous library"
say lib_down   "swap order with next library"
say lib_remove "remove library selected in the list"
say dir_add    "add a folder using a file dialog"
say dir_up     "swap order with previous folder"
say dir_down   "swap order with next folder"
say dir_remove "remove folder selected in the list"
say client_class_tree "Client Class Tree"
say clipboard_view "Clipboard View"
say command_history_view "Command History View"
say event_history_view "Event History View"

# during/after piksel:

say auto_apply "Auto-Apply"
say font_preview "Preview:"
say font_preview_2 "ABCDEFGHIJKLMNOPQRSTUVWXYZ\nabcdefghijklmnopqrstuvwxyz\n0123456789"
say font_style "Style:"
say font_bold "Bold"
say font_italic "Italic"
say font_family "Name:"
say font_size "Size:"
say damn "Damn!"
say console_clear "Clear Console"
say horizontal "Horizontal"
say vertical "Vertical"
say language "Language"

# 2007:

say no_matches "(no matches)"
say preset "preset"
say canvasgrid "Grid color"
say grid_size "Grid size"
say gridstate "Activate background grid"
say snap_grid "Snap to grid"
say viewfont "object font"
say consolefont "console font"
say keyboarddialogfont "virtual keyboard font"
say keyboard_view "Virtual keyboard"