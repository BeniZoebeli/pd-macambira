#!/usr/bin/env tclsh
# French (français) translations for PureData
# $Id: francais.tcl,v 1.1.2.5.2.8 2007-07-11 19:21:32 matju Exp $
# by Patrice Colet

say file "Fichier"
  say new_file "Nouveau Fichier"
  say open_file "Ouvrir Fichier..."
  say server_prefs "Préférences serveur..."
  say client_prefs "Préférences client..."
  say send_message "Envoyer Message..."
  say paths "Chemins..."
  say close "Fermer"
  say save "Sauvegarder"
  say save_as "Sauvegarder Sous..."
  say print "Imprimer..."
  say quit "Quitter"
  
  say canvasnew_file "Nouveau Fichier"
  say canvasopen_file "Ouvrir Fichier..."
  say canvassave "Sauver"
  say canvassave_as "Sauver sous..."
  #say clientpdrc_editor "Éditeur de .pdrc"
  #say clientddrc_editor "Éditeur de .ddrc"
  say canvasclose "Fermer"
  say canvasquit "Quitter"
  
say edit "Édition"
  say undo "Défaire"
  say redo "Refaire"
  say cut "Couper"
  say copy "Copier"
  say paste "Coller"
  say duplicate "Dupliquer"
  say select_all "Sélectionner tout"
  say text_editor "éditeur de texte..."
  say font "Police"
  say tidy_up "Aligner"
  say edit_mode "Mode d'édition"
  say editmodeswitch "Mode édition/execution"
  
  say canvascut "Couper"
  say canvascopy "Copier"
  say canvasundo "Annuler"
  say canvasredo "Rétablir"
  say canvaspaste "Coller"
  say canvasduplicate "Dupliquer"
  say canvasselect_all "Sélectionner Tout"
  say canvaseditmodeswitch "Mode édition/execution"
  
say view "Vue"
  say reload "Recharger"
  say redraw "Redessiner"
  
  say canvasreload "Recharger"
  say canvasredraw "Redessiner"
  
  say find "Trouver"
  say find_again "Trouver encore"
  say find_last_error "Trouver la dernière erreur"
   say string "Trouver chaîne de charactères"
 say canvasfind "Trouver"
  say canvasfind_again "Trouver encore"

say put "Mettre"
  say Object "Objet"
  say Message "Message"
  say Number "Nombre"
  say Symbol "Symbole"
  say Comment "Commentaire"
  say Array "Tableau"

say media "Média"
  say audio_on "Audio ON"
  say audio_off "Audio OFF"
  say test_audio_and_midi "Tester l'audio et le MIDI"
  say load_meter "CPU-mètre"
  
  say canvasaudio_on "Audio ON"
  say canvasaudio_off "Audio OFF"
  say clienttest_audio_and_midi "Tester l'audio et le MIDI"
  say canvasload_meter "CPU-mètre"

say window "Fenêtre"

say help "Aide"
  say about "À propos de..."
  say pure_documentation "Pure Documentation..."
  say class_browser "Explorateur de classes..."

  say canvasabout "à propos de..."
  
  say properties "Propriétés"
say open "Ouvrir"

### for key binding editor
say general "Génerale"
say audio_settings "Paramètres audio"
say midi_settings "Paramètres MIDI"
say latency_meter "Latence-mètre"
say Pdwindow "Console PD"

say canvaspdwindow "Console PD"
say canvaslatency_meter "Latence-mètre"
say clientaudio_settings "Paramètres audio"
say clientmidi_settings "Paramètres audio"

### for Properties Dialog (phase 5B)
say_category IEM
say w "Largeur(px)"
say h "Hauteur(px)"
say hold "Temps de maintien(ms)"
say break "temps d'arrêt(ms)"
say min "Valeur minimum"
say max "Valeur maximum"
say is_log "Mode"
say linear "Lineaire"
say logarithmic "Logarithmique"
say isa "Initialisation"
say n "Nombre de choix"
say steady "Régularité"
say steady_no  "Caler sur le clic"
say steady_yes "Suivre le clic"
say snd "symbole d'envoie"
say rcv "symbole de reception"
say lab "label"
say ldx "Décalage x du label"
say ldy "Décalage du label"
say fstyle "Style de police"
say fs "Taille de la police"
say bcol "Couleur d'arrière plan"
say fcol "Couleur du premier plan"
say lcol "couleur du label"
say yes "Oui"
say no "Non"
say courier "courrier (typewriter)"
say helvetica "helvetique (sansserif)"
say times "times (serif)"
say coords "Afficher sur le parent"

say_category "Propriétés du Gatom"
say width "Largeur"
say lo "Plus Petite Limite"
say hi "Plus Grande Limite"
say label "Label"
say wherelabel "Montrer le label allumé"
say symto "Symbole d'envoie"
say symfrom "Symbole de reception"

say_category "Propriétés du graph"
say x1   "Depuis x"
say x2   "Vers x"
say xpix "Largeur d'écran"
say y2   "Depuis y"
say y1   "Vers y"
say ypix "Hauteur d'écran"

say_category "Propriétés du canevas"
#say xscale "X units/px"
#say yscale "Y units/px"
say gop "Afficher sur le parent"
say xmargin "Marge x"
say ymargin "Marge y"
say height "Hauteur"
say_category MainWindow
say name "Nom"
say n    "Taille"
say xfrom "étendue sur x depuis"
say xto "étendue sur x jusque"
say yfrom "étendue sur y depuis"
say yto "étendue sur x jusque"


### Main Window

say in "entrée"
say out "sortie"
say audio "Audio"
say meters "Niveaux"
say io_errors "Erreurs d'E/S"
say cannot "ne peut"

say_category Autre
say_namespace summary {
  say_category IEMGUI
#  say bng    "Déclencheur"
  say bng    "Bang"
  say tgl    "Interrupteur"
  say nbx    "Boite de Nombre (IEM)"
# say Number2 "Nombre2"
  say hsl    "Glissière (Horizontale)"
  say vsl    "Glissière (Verticale)"
# say hsl    "Sélecteur (Horizontal)"
  say hradio "Boîte De Selection (Horizontale)"
  say vradio "Boîte De Selection (Verticale)"
#  say cnv    "Illustration (IEM)"
  say cnv    "Canevas (IEM)"
  say dropper "Boite Pour Glisser-Déposer"
  say vu     "Vu-mètre"

  say_category GLUE
  say bang "Envoyer un Déclenchement"
  say float "Stocker et rapeller un nombre flottant"
  say symbol "Stocker et rapeller un symbole"
  say int "Stocker et rapeller un nombre entier"
  say send "Envoyer un message vers un objet défini"
  say receive "Recevoir un message envoyé"
  say select "Tester la reception d'un chiffre ou d'un symbole"
  say route "Diriger un message en fonction du premier élement"
  say pack "Empaqueter un message"
  say unpack "Désempaqueter un message"
  say trigger "Mettre en séquence un message"
  say spigot "Interrupteur de message"
  say moses "partitionner un flot numérique en deux (moïse)"
  say until "Méchanisme de bouclage"
  say print "Afficher un message dans la console"
  say makefilename "Formater un symbole avec un champ variable"
  say change "Supprimer les répetitions d'un flot"
  say swap "Permuter deux chiffres"
  say value "Partager une valeur numérique"

  say_category TEMPS
  say delay "Envoyer un déclenchement aprés un délai"
  say metro "Envoyer un déclenchement périodiquement"
  say line "Envoyer linéairement une serie de nombres "
  say timer "Mesurer l'intervalle de temps"
  say cputime "Mesurer le temps de calcul"
  say realtime "Mesurer le temps réel"
  say pipe "Délai dynamique pour les nombres"

  say_category MATH
  say + "Ajouter"
  say - "Soustraire"
  say * "Multiplier"
  say {/ div} "Diviser"
  say {% mod} "Retenue d'une Division"
  say pow "Exponentiel"
  say == "égal?"
  say != "Different?"
  say > "Plus Grand Que?"
  say < "Plus Petit Que?"
  say >= "Plus Grand ou égal à?"
  say <= "Plus Petit ou égal à?"
  say &  "et logique (and)"
  say |  "ou logique (or)"
  say && "et logique (and)"
  say || "ou logique (or)"
  say mtof "MIDI vers Hertz"
  say ftom "Hertz vers MIDI"
  say powtodb "Watts vers dB"
  say dbtopow "dB vers Watts"
  say rmstodb "Volts vers dB"
  say dbtorms "dB vers Volts"
  say {sin cos tan atan atan2 sqrt} "Trigonometrie"
  say log "Logarithme d'Euler"
  say exp "Exponentiel d'Euler"
  say abs "Valeur absolue"
  say random "Aléatoire"
  say max "Le plus grand des deux nombres"
  say min "Le plus petit des deux nombres"
  say clip "Forcer un nombre entre deux valeurs"

  say_category MIDI
  say {notein ctlin pgmin bendin touchin polytouchin midiin sysexin} "Entrée MIDI"
  say {noteout ctlout pgmout bendout touchout polytouchout midiout}  "Sortie MIDI"
  say makenote "Programmer un message décalé \"note off\" correspondant à un note-on"
  say stripnote "ignorer les messages \"note off\" "

  say_category TABLEAUX
  say tabread "Lire Un Nombre Depuis Une Tableau"
  say tabread4 "Lire Un Nombre Depuis Une Tableau, avec 4 points d'interpolation"
  say tabwrite "Ecrire un nombre dans une tableau"
  say soundfiler "Lire et écrire un tableau vers un fichier"

  say_category MISC
  say loadbang "Déclencher au lancement"
  say serial "Contrôle du port serie pour NT seulement"
  say netsend "Envoyer messages à travers internet"
  say netreceive "Recevoir messages à travers internet"
  say qlist "Séquenceur de messages"
  say textfile "Convertisseur de fichier vers messages"
  say openpanel "dialogue \"Ouvrir\" "
  say savepanel " dialogue \"Sauver sous\""
  say bag "Série de nombres"
  say poly "Allocation de voix polyphoniques"
  say {key keyup} "Valeurs Numériques Du Clavier"
  say keyname "Nom symbolique d'une touche de clavier"

  say_category "AUDIO MATH"
  foreach word {+ - * /} {say $word~ "[say $word] (for signals)"}
  say max~ "Valeur maximale de signaux"
  say min~  "Valeur minimale de signaux"
  say clip~ "Contraint le signal à rester entre deux valeurs"
  say q8_rsqrt~ "Racine carrée réciproque (attention -- 8 bits!)"
  say q8_sqrt~ "Racine carrée (attention -- 8 bits!)"
  say wrap~ "Envelopper autour (Genre De partie fractionnelle)"
  say fft~ "Transformation discrète de Fourier"
  say ifft~ "Partie complexe de la transformée de fourier"
  say rfft~ "Partie réelle de la transformée de fourier"
  say rifft~ "Inverse de la Partie réelle de la transformée de fourier"
  say framp~ "Donne la rampe pour chaque block"
  foreach word {mtof ftom rmstodb dbtorms rmstopow powtorms} {
    say $word~ "[say $word] (pour les signaux)"
  }
}

### phase 3

say_namespace summary {
  say_category "AUDIO GLUE"
  say dac~ "Sortie audio"
  say adc~ "Entrée audio"
  say sig~ "Conversion d'un nombre vers un signal"
  say line~ "Génère une rampe audio"
  say vline~ "line~ de luxe"
  say threshold~  "Détecte les seuils d'un signal"
  say snapshot~ "échantillonne un signal (converti en nombres)"
  say vsnapshot~ "snapshot~ de luxe"
  say bang~ "Envoie un signal de déclenchement aprés chaque block DSP"
  say samplerate~ "Obtient la fréquence d'échantillonnage"
  say send~ "Connection d'un signal non-local avec un transcepteur" #fanout=transceiver=transcepteur
  say receive~ "Reçoit le signal venant de send~"
  say throw~  "Additionne le Signal à un bus" 
  say catch~ "Définit et lit la somme des signaux dans un bus"
  say block~ "spécifie la taille et la convergence d'un block"
  say switch~ "Permutation marche/arrêt du calcul DSP"
  say readsf~ "Lit un fichier audio depuis le disque"
  say writesf~ "Enregistre un fichier audio sur le disque"

  say_category "OSCILLATEURS AUDIO ET TABLEAUX"
  say phasor~ "Oscillateur en Dent De Scie"
  say {cos~ osc~} "oscillateur cosinusoïdal"
  say tabwrite~ "Écrit dans un tableau"
  say tabplay~ "Lecture d'un tableau (non-transpositeur)"
  say tabread~ "Lecture non-interpolatrice d'un tableau"
  say tabread4~ "Lecture d'un tableau avec quatre points d'interpolation"
  say tabosc4~ "Oscillateur à table d'onde"
  say tabsend~ "écrit continuellement un block dans un tableau"
  say tabreceive~ "Lit continuellement un block dans un tableau"

  say_category "FILTRES AUDIO"
  say vcf~ "filtre contrôlé par un signal (voltage)"
  say noise~ "générateur de bruit blanc"
  say env~ "suiveur d'enveloppe"
  say hip~ "filtre passe haut"
  say lop~ "filtre passe bas"
  say bp~ "filtre passe bande"
  say biquad~ "filtre brut"
  say samphold~ "échantillonneur bloqueur"
  say print~ "imprime un ou plusieurs \"blocks\""
  say rpole~ "filtre à valeurs réelles brut un-pôle"
  say rzero~ "filtre à valeurs réelles brut zéro-pôle"
  say rzero_rev~ "[say rzero~] (temps-inversé)"
  say cpole~ "[say rpole~] (valeurs-complexes)"
  say czero~ "[say rzero~] (valeurs-complexes)"
  say czero_rev~ "[say rzero_rev~] (valeurs-complexes)"

  say_category "DELAI AUDIO"
  say delwrite~ "écrit dans une ligne de delai"
  say delread~ "lit depuis une ligne de delai"
  say vd~ "lit depuis une ligne de delai à un temps de delai variable"

  say_category "SUBWINDOWS"
  say pd "Definie un subwindow"
  say table "Tableau de nombres dans un subwindow"
  say inlet "Ajouter une entrée à un pd"  ###LOL
  say outlet "Ajouter une sortie à un pd" ###LOL
  say  inlet~  "[say inlet] (pour un signal)"
  say outlet~ "[say outlet] (pour un  signal)"

  say_category "CALIBRAGE DE DONNEES"
  say struct "définit une structure de données"
  say {drawcurve filledcurve} "Dessine une courbe"
  say {drawpolygon filledpolygon} "Dessine un polygone"
  say plot "parcelle le champ d'un tableau"
  say drawnumber "Imprime une valeur numérique"

  say_category "ACCEDER AUX DONNEES"
  say pointer "Pointe vers un objet appartenant à un calibrage"
  say get "Obtient des champs numériques"
  say set "Change des champs numériques"
  say element "Obtient l'élément d'un tableau"
  say getsize "Obtient la taille d'un tableau"
  say setsize "Change la taille d'un tableau"
  say append "Ajoute un élément à la liste"
  say sublist "Obtient un pointeur dans la liste qui est l'élément d'un autre scalaire"
  say scalar "Dessine un scalaire sur le parent"
  
  say_category "OBSOLETE"
  say scope~ "(utiliser tabwrite~)"
  say namecanvas "Renomme un patch" ;# what was this anyway?
  say template "(utiliser struct)"
}

# phase 4 (pdrc & ddrc)

say section_audio "Audio"
  say -r "Fréquence d'échantillonage"
  say -audioindev "Appareils audio en entrée"
  say -audiooutdev "Appareils audio en sortie"
  say -inchannels "Nombre de canaux d'entrée audio(par appareil, comme \"2\" ou \"16,8\")"
  say -outchannels "Nombre de canaux de sortie audio (pareil)"
  say -audiobuf "specifie la taille de la mémoire tampon en msec"
  say -blocksize "specifie la taille du block audio I/O en nombre d'échantillons"
  say -sleepgrain "specify number of milliseconds to sleep when idle"
  say -nodac "Supprime la sortie audio"
  say -noadc "Supprime l'entrée audio"
  say audio_api_choice "Audio API"
    say default "default"
    say -alsa "use ALSA audio API"
    say -jack "use JACK audio API"
    say -mmio "use MMIO audio API (default for Windows)"
    say -portaudio "use ASIO audio driver (via Portaudio)"
    say -oss "use OSS audio API"
  say -32bit "allow 32 bit OSS audio (for RME Hammerfall)"
  say {} "default"

say section_midi "MIDI"
  say -nomidiin "Supprime l'entrée MIDI"
  say -nomidiout "Supprime la sortie MIDI"
  say -midiindev  "Liste des appareils MIDI en entrée; e.g., \"1,3\" pour le premier, et le troisième"
  say -midioutdev "Liste des appareils MIDI en sortie, même format"

say section_externals "Externals"
  say -path     "Chemin de recherche de fichiers"
  say -helppath "Chemin de recherche des fichiers d'aides"
  say -lib      "Charge une librairie d'objets"

say section_gui "Gooey"
  say -nogui "supprime le démarrage du GUI (attention)"
  say -guicmd "substitue le GUI à un autre programme (e.g., rsh)"
  say -console "console scrollback lines (0 = disable console)"
  say -look "icône de la barre des boutons"
  say -statusbar "active la barre de status"
  say -font "Specifie la taille par défaut de la police"

say section_other "Autre"
  say -open "ouvrir un ou plusieurs fichier(s) au démarrage"
  say -verbose "extra printout on startup and when searching for files"
  say -d "debug level"
  say -noloadbang "disable the effect of \[loadbang\]"
  say -send "envoie un message au démarrage (aprés que les patches soient chargés)"
  say -listdev "list audio and MIDI devices upon startup"
  say -realtime "use real-time priority (needs root privilege)"

say section_paths "Paths"

# phase 4B: ddrc (keyword names not finalized!)

say section_color "couleurs"
 say canvas_color "canevas"
  say canvasbgedit "arrière plan d'un canevas (edit mode)"
  say canvasbgrun "arrière plan d'un canevas (run mode)"
 say object_color "objet"
  say viewframe1 "couleur de la boite d'objet"
  say viewframe2 "couleur de la boite d'objet"
  say viewframe3 "couleur de la boite d'objet"
  say viewframe4 "couleur du point culminant de la boite d'objet"
  say viewbg "arrière plan d'un objet"
  say viewfg "arrière plan d'un objet"
  say commentbg "arrière plan d'un commentaire"
  say commentfg "premier plan d'un commentaire"
  say commentframe1 "comment frame"
  say commentframe2 "comment frame"
  say commentframe3 "comment frame"
  say viewselectframe "boite selectionnée"
 say wire_color "cordon"
  say wirefg "couleur d'un cordon"
  say wirefg2 "couleur du point culminant d'un cordon"
  say wiredspfg "couleur d'un cordon DSP"
  say futurewiredash "nouveau cordon (en pointillets)"
 say others_color "couleur des autres"
  say boxinletfg "couleur de l'entrée"
  say boxoutletfg "couleur de la sortie"
  say selrectrect "boite de selection"
say keys "touches"
say others "autres"
say canvashairstate "Activer le réticule"
say canvashairsnap "Crosshair snap to object"
say canvasstatusbar "Activer la barre du status"
say canvasbuttonbar "Activer la barre des boutons"
say wirewirearrow "Flêche blanche"
say viewtooltip "ToolTip"
say canvasinsert_object "Insérer un objet"
say canvaschain_object "Enchaînner un objet"
say canvasclear_wires "Supprimer les cordons"
say canvasauto_wire "Supprimer un objet"
# phase 5A

say cannot "ne peut"
say cancel "Annuler"
say apply  "Appliquer"
say ok     "OK"
say popup_open "Ouvrir"
say popup_insert "Insèrer"
say popup_properties "Propriétés"
say popup_clear_wires "Supprimer les cordons"
say popup_auto_wire "Supprimer l'objet"
say popup_help "Aide"
say filter "Filtre: "
say how_many_object_classes "%d of %d classes d'objet"
say do_what_i_mean "Fais ce que je te dis"
say ask_cool "Ça serait cool, hein?"
say save_changes? "Sauvegarder les changements?"
say reset "Remise à zero"
say Courier "Courier (monospaced)"
say Helvetica "Helvetica (sansserif)"
say Times "Times (serif)"
say add "Ajouter"
say up "Vers le haut"
say down "Vers le bas"
say remove "Supprimer"
say lib_add    "Ajouter le nom ajouté à la liste"
say lib_up     "Inverser l'ordre avec la librairie précédente"
say lib_down   "Inverser l'ordre avec la librairie suivante"
say lib_remove "Supprimer la librairie selectionnée dans la liste"
say dir_add    "Ajouter un dossier avec la boite de dialogue"
say dir_up     "Inverser l'ordre avec le dossier précédent"
say dir_down   "Inverser l'ordre avec le dossier suivant"
say dir_remove "Supprimer le dossier selectionné dans la liste"
say client_class_tree "Client Class Tree"
say clipboard_view "Vue du presse-papier"
say command_history_view "Vue de l'historique de commandes"
say event_history_view "Vue de l'historique d'événements"

# during/after piksel:

say auto_apply "Appliquer automatiquement"
say font_preview "Aperçu"
say font_preview_2 "ABCDEFGHIJKLMNOPQRSTUVWXYZ\nabcdefghijklmnopqrstuvwxyz\n0123456789"
say font_style "Style:"
say font_bold "Gras"
say font_italic "Italique"
say font_family "Nom:"
say font_size "Taille:"
say damn "Zut alors!"
say console_clear "Effacer la console"
say horizontal "Horizontal"
say vertical "Vertical"
