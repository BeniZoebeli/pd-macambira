
- make object which outputs previous and next files

- make patch close itself, otherwise:
   - upon [loadbang], wait, then close previous patch

- in pure_data_files.pd, make the patch create [pd clone] dynamically,
  probably like how send_messages_to_pd.pd does it.

- in pure_data_files.pd, make the patch reset itself once it finishes the
  clone. (remember that [pd clone] has to be the last object.)

- make looping sequence

----------
File Order
----------

- hello world
- basic elements
- getting help
- edit mode
- objects
- connections
- messages
- EXERCISE: make your first Pd patch
- bang
- event driven processing
- counters
- hot and cold inlets
- right-to-left order
- ordering messages
- depth first
- storage objects
- atoms
- atomic messages
- selectors
- subpatches
- inlets and outlets
- outlet order
- Example: its all just data
- guis
- gui objects
- nervous guis


- EXERCISE


---------------
Unsorted topics
---------------

- trigger conversions
- symbol conversion

- arguments

- keywords

- init to 0
- math
- expr

- number limitations

- timing/metro

- writing objects in Pd (abstractions)

- loading libraries
- namespaces
- import

- selectors
- multiple messages
- sends and receives
- sends in a message box

- Example: parazit
- send messages to Pd
- pure data files



data structures tutorial?
