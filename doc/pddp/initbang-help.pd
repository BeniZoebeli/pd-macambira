#N canvas 0 0 555 619 10;
#X obj 0 595 cnv 15 552 21 empty \$0-pddp.cnv.footer empty 20 12 0
14 -228856 -66577 0;
#X obj 0 0 cnv 15 552 40 empty \$0-pddp.cnv.header initbang 3 12 0
18 -204280 -1 0;
#X obj 1 412 cnv 3 550 3 empty \$0-pddp.cnv.inlets inlets 8 12 0 13
-228856 -1 0;
#N canvas 50 243 494 344 META 0;
#X text 12 115 PLATFORM windows macosx gnulinux;
#X text 12 155 LIBRARY internal;
#X text 12 65 LICENSE SIBSD;
#X text 12 195 WEBSITE;
#X text 12 5 GENRE help;
#X text 12 85 DESCRIPTION send "bang" automatically when abstraction
starts to load;
#X text 12 25 NAME initbang;
#X text 12 135 OUTLET_0 bang;
#X text 12 45 KEYWORDS control bang_op;
#X text 12 215 RELEASE_DATE 2006;
#X text 12 235 RELEASE_VERSION;
#X text 12 255 HELP_PATCH_AUTHORS IOhannes m zmoelnig. Jonathan Wilkes
revised the patch to conform to the PDDP template for Pd version 0.42.
;
#X text 12 175 AUTHOR IOhannes m zmoelnig;
#X restore 502 597 pd META;
#X obj 1 439 cnv 3 550 3 empty \$0-pddp.cnv.outlets outlets 8 12 0
13 -228856 -1 0;
#X obj 1 492 cnv 3 550 3 empty \$0-pddp.cnv.argument arguments 8 12
0 13 -228856 -1 0;
#X obj 1 519 cnv 3 550 3 empty \$0-pddp.cnv.more_info more_info 8 12
0 13 -228856 -1 0;
#X text 100 496 (none);
#N canvas 94 481 428 109 Related_objects 0;
#X obj 1 1 cnv 15 425 20 empty \$0-pddp.cnv.subheading empty 3 12 0
14 -204280 -1 0;
#X obj 21 42 closebang;
#X text 7 1 [initbang] Related Objects;
#X restore 104 597 pd Related_objects;
#X obj 80 448 cnv 17 3 17 empty \$0-pddp.cnv.let.0 0 5 9 0 16 -228856
-162280 0;
#X obj 442 22 pddp/pddplink http://wiki.puredata.info/en/initbang -text
pdpedia: initbang;
#X obj 468 5 initbang;
#X text 100 416 (none);
#X text 100 447 bang;
#X text 102 556 Pd Documentation Chapter 3.6 - doc/1.manual/x3.htm
;
#X obj 95 383 print from_initbang;
#X obj 95 227 print from_loadbang;
#X obj 95 115 initbang-help-ex1-loadbang;
#X obj 95 349 initbang-help-ex2-initbang;
#X text 102 523 [initbang] is useful if you want to build abstractions
that have a variable number of inlets or outlets.;
#X text 112 139 If you connect this outlet to the [print] object below
and save the patch \, there will be a problem the next time you open
it. Pd will try to connect the abstraction's outlet to the inlet of
[print] \, but this will happen before [loadbang] is executed (i.e.
\, before the outlet exists). The result will be an error \, and no
connection will be made.;
#X text 13 21 send "bang" automatically when abstraction starts to
load;
#X text 170 447 - a bang message is sent automatically when the containing
patch is first opened as an embeded object in another patch.;
#X obj 6 597 pddp/pddplink pddp/help.pd -text help;
#X text 93 71 The abstraction below dynamically creates an outlet using
[loadbang]. The [loadbang] object send a bang after this help patch
has loaded.;
#X text 92 261 To solve this problem \, the abstraction below uses
[initbang] instead of [loadbang]. [initbang] will send a bang before
Pd initializes the parent patch \, so that the [outlet] is created
before the connection between objects is made. Thus \, you can see
below that the objects are connected successfully.;
