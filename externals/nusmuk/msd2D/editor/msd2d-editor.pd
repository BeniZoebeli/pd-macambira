#N struct liaison float x1 float y1 float x2 float y2 float mid1 float
mid2 float lid;
#N struct mass float x float y float mid float mob;
#N canvas 130 52 866 562 10;
#N canvas 610 84 617 552 data 1;
#X scalar liaison 473.44 182.541 548 179 7 8 0 \;;
#X scalar liaison 391.87 183.337 473.44 182.541 6 7 1 \;;
#X scalar liaison 313.233 178.369 391.87 183.337 5 6 2 \;;
#X scalar liaison 260.779 172.377 313.233 178.369 4 5 3 \;;
#X scalar liaison 196.229 164.351 260.779 172.377 3 4 4 \;;
#X scalar liaison 137.18 159.608 196.229 164.351 2 3 5 \;;
#X scalar liaison 79.9374 158.402 137.18 159.608 1 2 6 \;;
#X scalar liaison 36 159 79.9374 158.402 0 1 7 \;;
#X scalar mass 36 159 0 900 \;;
#X scalar mass 79.9374 158.402 1 0 \;;
#X scalar mass 137.18 159.608 2 0 \;;
#X scalar mass 196.229 164.351 3 0 \;;
#X scalar mass 260.779 172.377 4 0 \;;
#X scalar mass 313.233 178.369 5 0 \;;
#X scalar mass 391.87 183.337 6 0 \;;
#X scalar mass 473.44 182.541 7 0 \;;
#X scalar mass 548 179 8 900 \;;
#X restore 735 71 pd data;
#X obj 56 517 structures;
#X msg 152 72 \; pd-data clear;
#X obj 60 298 bng 24 250 50 0 empty \$0-generate generate 0 -6 0 8
-24198 -1 -1;
#X text 57 493 Data Struct Definitions;
#N canvas 460 399 104 45 save 0;
#X obj 2 3 cnv 15 100 40 empty empty empty 20 12 0 14 -228992 -66577
0;
#X obj 4 17 bng 20 250 50 0 empty empty load 0 -6 0 8 -258699 -1 -1
;
#X obj 62 17 bng 20 250 50 0 empty empty save_as 0 -6 0 8 -24198 -1
-1;
#X obj 101 60 savepanel;
#X obj 50 168 s pd-data;
#X msg 101 115 write \$1;
#X obj 20 91 openpanel;
#X msg 20 115 read \$1;
#X obj 20 138 t b a;
#X obj 20 195 s \$0-generate;
#X obj 33 17 bng 20 250 50 0 empty empty save 0 -6 0 8 -241291 -1 -1
;
#X obj 100 91 symbol;
#X connect 1 0 6 0;
#X connect 2 0 3 0;
#X connect 3 0 11 0;
#X connect 5 0 4 0;
#X connect 6 0 7 0;
#X connect 6 0 11 1;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 8 1 4 0;
#X connect 10 0 11 0;
#X connect 11 0 5 0;
#X coords 0 0 1 1 102 44 1;
#X restore 723 150 pd save;
#X text 728 46 Edit here:;
#N canvas 564 255 781 748 generator 0;
#N canvas 210 99 931 555 getter 0;
#X obj 244 89 inlet;
#X obj 244 141 outlet;
#X text 91 57 First build masses \, then links!!;
#X obj 148 281 outlet;
#N canvas 403 15 685 826 fix-mass-ids 0;
#X obj 139 158 t b b b b b b b;
#X msg 175 254 traverse pd-data \, next;
#X msg 116 316 next;
#X obj 175 284 pointer mass;
#X obj 239 189 s \$0-reset-counter;
#N canvas 331 520 708 349 counter 0;
#X obj 156 125 f 0;
#X msg 172 102 0;
#X obj 172 74 r \$0-reset-counter;
#X obj 188 125 + 1;
#X obj 156 179 outlet;
#X obj 156 50 inlet;
#X connect 0 0 3 0;
#X connect 0 0 4 0;
#X connect 1 0 0 1;
#X connect 2 0 1 0;
#X connect 3 0 0 1;
#X connect 5 0 0 0;
#X restore 192 384 pd counter;
#X obj 192 420 tabread \$0-msdid;
#X obj 192 482 set mass mid;
#X text 272 286 At end: fix links!;
#X obj 282 386 get mass mid;
#X obj 175 333 t b b b b p p;
#X obj 307 461 pack 0 0;
#X obj 307 490 tabwrite \$0-mid2msdid;
#X text 269 520 Store a mapping mid => msdid for fixing links later
;
#X obj 139 116 inlet;
#X obj 254 307 outlet;
#X connect 0 5 1 0;
#X connect 0 6 4 0;
#X connect 1 0 3 0;
#X connect 2 0 3 0;
#X connect 3 0 10 0;
#X connect 3 1 2 0;
#X connect 3 2 15 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 6 0 11 0;
#X connect 9 0 11 1;
#X connect 10 0 2 0;
#X connect 10 1 5 0;
#X connect 10 4 9 0;
#X connect 10 5 7 1;
#X connect 11 0 12 0;
#X connect 14 0 0 0;
#X restore 330 177 pd fix-mass-ids;
#N canvas 403 15 685 826 fix-links 0;
#X obj 139 158 t b b b b b b b;
#X msg 175 254 traverse pd-data \, next;
#X msg 116 316 next;
#X obj 239 189 s \$0-reset-counter;
#X obj 175 284 pointer liaison;
#X text 293 285 At end: make links in msd*!;
#X obj 192 420 tabread \$0-mid2msdid;
#X obj 192 482 set liaison mid1 mid2;
#X obj 343 418 tabread \$0-mid2msdid;
#X obj 192 389 get liaison mid1 mid2;
#X obj 175 333 t b b b b p p;
#X obj 139 128 inlet;
#X obj 275 312 outlet;
#X connect 0 5 1 0;
#X connect 1 0 4 0;
#X connect 2 0 4 0;
#X connect 4 0 10 0;
#X connect 4 1 2 0;
#X connect 4 2 12 0;
#X connect 6 0 7 0;
#X connect 8 0 7 1;
#X connect 9 0 6 0;
#X connect 9 1 8 0;
#X connect 10 0 2 0;
#X connect 10 4 9 0;
#X connect 10 5 7 2;
#X connect 11 0 0 0;
#X restore 330 200 pd fix-links;
#N canvas 0 0 920 707 get-masses 0;
#X obj 228 162 t b b b b b b b;
#X msg 264 258 traverse pd-data \, next;
#X msg 215 362 next;
#X obj 264 288 pointer mass;
#X obj 347 432 get mass x y mid mob;
#X obj 482 459 select 0;
#X msg 522 484 0;
#X obj 347 514 pack 0 0 0 0;
#X msg 481 483 1;
#X obj 328 193 s \$0-reset-counter;
#N canvas 331 520 708 349 counter 0;
#X obj 156 125 f 0;
#X msg 172 102 0;
#X obj 172 74 r \$0-reset-counter;
#X obj 188 125 + 1;
#X obj 156 179 outlet;
#X obj 156 50 inlet;
#X connect 0 0 3 0;
#X connect 0 0 4 0;
#X connect 1 0 0 1;
#X connect 2 0 1 0;
#X connect 3 0 0 1;
#X connect 5 0 0 0;
#X restore 364 362 pd counter;
#X obj 264 337 t b b b b p p b;
#X obj 364 385 s \$0-current-mass-idx;
#X obj 437 537 s \$0-current-mid;
#X msg 328 213 const 0;
#X obj 328 234 s \$0-mid;
#X obj 390 234 s \$0-msdid;
#X text 575 330 At end: start 2nd pass;
#X obj 228 113 inlet;
#X obj 347 564 outlet;
#X obj 656 566 r \$0-current-mass-idx;
#X obj 605 539 r \$0-current-mid;
#X obj 605 616 tabwrite \$0-mid;
#X obj 605 592 pack 0 0;
#X text 598 515 Write old mids to table;
#X obj 605 640 print mass-as-in-struct;
#X obj 612 368 outlet;
#X connect 0 5 1 0;
#X connect 0 6 9 0;
#X connect 0 6 14 0;
#X connect 1 0 3 0;
#X connect 2 0 3 0;
#X connect 3 0 11 0;
#X connect 3 1 2 0;
#X connect 3 2 26 0;
#X connect 4 0 7 0;
#X connect 4 1 7 1;
#X connect 4 2 7 2;
#X connect 4 2 13 0;
#X connect 4 3 5 0;
#X connect 5 0 8 0;
#X connect 5 1 6 0;
#X connect 6 0 7 3;
#X connect 7 0 19 0;
#X connect 8 0 7 3;
#X connect 10 0 12 0;
#X connect 11 0 2 0;
#X connect 11 5 4 0;
#X connect 11 6 10 0;
#X connect 14 0 15 0;
#X connect 14 0 16 0;
#X connect 18 0 0 0;
#X connect 20 0 23 1;
#X connect 21 0 23 0;
#X connect 23 0 22 0;
#X connect 23 0 25 0;
#X restore 244 115 pd get-masses;
#N canvas 0 0 768 708 make-links 0;
#X obj 156 275 get liaison mid1 mid2;
#X obj 174 318 pack 0 0;
#X obj 156 229 pointer liaison;
#X msg 156 203 next;
#X msg 194 204 traverse pd-data \, bang;
#X obj 126 251 t b p;
#X obj 174 351 outlet;
#X obj 194 147 inlet;
#X obj 388 303 outlet;
#X text 440 302 Now set lid field of links.;
#X connect 0 0 1 0;
#X connect 0 1 1 1;
#X connect 1 0 6 0;
#X connect 2 0 5 0;
#X connect 2 1 3 0;
#X connect 2 2 8 0;
#X connect 3 0 2 0;
#X connect 4 0 2 0;
#X connect 5 0 3 0;
#X connect 5 1 0 0;
#X connect 7 0 4 0;
#X restore 148 257 pd make-links;
#N canvas 0 0 590 588 get-ids-from-msd 0;
#X obj 176 209 r \$0-msd-attr;
#X msg 287 189 infosL;
#X obj 176 277 route Mass;
#N canvas 331 520 708 349 counter 0;
#X obj 156 125 f 0;
#X msg 172 102 0;
#X obj 172 74 r \$0-reset-counter;
#X obj 188 125 + 1;
#X obj 156 179 outlet;
#X obj 156 50 inlet;
#X connect 0 0 3 0;
#X connect 0 0 4 0;
#X connect 1 0 0 1;
#X connect 2 0 1 0;
#X connect 3 0 0 1;
#X connect 5 0 0 0;
#X restore 206 324 pd counter;
#X obj 176 301 t a b;
#X obj 287 233 s \$0-msd;
#X obj 176 249 spigot;
#X msg 347 187 1;
#X msg 237 185 0;
#X obj 176 350 pack 0 0;
#X obj 176 374 tabwrite \$0-msdid;
#X obj 176 412 print mass-as-in-msd;
#X msg 176 325 \$1;
#X obj 239 151 t b b b b;
#X obj 239 120 inlet;
#X obj 94 208 outlet;
#X text 71 167 Then fix mass ids;
#X connect 0 0 6 0;
#X connect 1 0 5 0;
#X connect 2 0 4 0;
#X connect 3 0 9 1;
#X connect 4 0 12 0;
#X connect 4 1 3 0;
#X connect 6 0 2 0;
#X connect 7 0 6 1;
#X connect 8 0 6 1;
#X connect 9 0 10 0;
#X connect 9 0 11 0;
#X connect 12 0 9 0;
#X connect 13 0 15 0;
#X connect 13 1 8 0;
#X connect 13 2 1 0;
#X connect 13 3 7 0;
#X connect 14 0 13 0;
#X restore 330 151 pd get-ids-from-msd;
#X text 569 416 TABLES USED:;
#X text 639 457 ordered mass ids;
#X text 639 481 ordered mass ids as in [msd*];
#X text 639 510 mass id as index \, msdid as value;
#X text 354 111 First get masses positions \, send to msd2D \, store
in table mid;
#X text 482 152 Then get numercial ids from msd2D \, store in table
msdid;
#X text 484 174 Change DS mass ids to match msdIds \, store mid2msdid
mapping;
#X text 480 200 Fix mid1 and mid2 in links to match what msd2D thinks
is right.;
#X text 257 258 Create messages to msd2D to create links;
#N canvas 209 87 622 579 set-lid 0;
#X obj 162 163 r \$0-msd-attr;
#X obj 288 201 s \$0-msd;
#X obj 162 203 spigot;
#X msg 292 129 1;
#X msg 236 127 0;
#X obj 238 62 inlet;
#X obj 238 93 t b b b b b;
#X obj 310 307 pointer liaison;
#X msg 310 281 traverse pd-data \, next;
#X msg 288 163 infosL;
#X obj 162 231 route Link;
#X obj 175 352 set liaison lid mid1 mid2;
#X msg 175 327 \$1 \$3 \$4;
#X msg 272 307 next;
#X obj 145 254 t b a;
#X text 105 394 This will move around the links \, but it's not critical
as long as we have the same number of graphical links as we have inside
the msd2D object. And we'd better damn sure should have the same amount
\, otherwise somethings went really \, really wrong and took a bad
turn and crashed the car and left the toilet seat open.;
#X text 104 481 Shouldn't happen.;
#X connect 0 0 2 0;
#X connect 2 0 10 0;
#X connect 3 0 2 1;
#X connect 4 0 2 1;
#X connect 5 0 6 0;
#X connect 6 1 4 0;
#X connect 6 2 9 0;
#X connect 6 3 3 0;
#X connect 6 4 8 0;
#X connect 7 0 11 3;
#X connect 7 1 13 0;
#X connect 8 0 7 0;
#X connect 9 0 1 0;
#X connect 10 0 14 0;
#X connect 12 0 11 0;
#X connect 13 0 7 0;
#X connect 14 0 13 0;
#X connect 14 1 12 0;
#X restore 234 286 pd set-lid;
#X text 314 284 Correct lids to match what msd2D tells us;
#X obj 475 458 table \$0-mid 4000;
#X obj 459 484 table \$0-msdid 4000;
#X obj 433 512 table \$0-mid2msdid 4000;
#X connect 0 0 6 0;
#X connect 4 0 5 0;
#X connect 5 0 7 0;
#X connect 6 0 1 0;
#X connect 6 1 8 0;
#X connect 7 0 3 0;
#X connect 7 1 18 0;
#X connect 8 0 4 0;
#X restore 131 221 pd getter;
#X obj 131 369 s \$0-msd;
#X msg 175 154 reset;
#X obj 175 200 s \$0-msd;
#X msg 175 175 Xmin 0 \, Xmax 800 \, Ymin 0 \, Ymax 800;
#X msg 239 300 mass fix 0 100 \$1 \$2;
#X obj 112 132 t b b b b;
#N canvas 376 279 682 601 make-setters 0;
#X obj 236 443 s pd-setter;
#X msg 206 213 traverse pd-data \, next;
#X obj 168 109 t b b b b;
#X obj 236 329 get mass x y mid;
#X msg 236 396 obj \$1 \$2 mass-set \$3;
#X obj 236 352 pack 0 0 0;
#X msg 151 239 next;
#X obj 145 327 s mypointer;
#X obj 206 272 t p p;
#X msg 226 135 clear;
#X obj 226 160 s pd-setter;
#X obj 168 68 inlet;
#X obj 206 240 pointer mass liaison;
#X obj 480 365 pack 0 0 0;
#X obj 389 294 t p p;
#X obj 480 342 get liaison x1 y1 lid;
#X msg 480 409 obj \$1 \$2 link-set \$3;
#X obj 480 454 s pd-lsetter;
#X obj 226 186 s pd-lsetter;
#X obj 373 342 s myliapointer;
#X connect 1 0 12 0;
#X connect 2 2 1 0;
#X connect 2 3 9 0;
#X connect 3 0 5 0;
#X connect 3 1 5 1;
#X connect 3 2 5 2;
#X connect 4 0 0 0;
#X connect 5 0 4 0;
#X connect 6 0 12 0;
#X connect 8 0 7 0;
#X connect 8 1 3 0;
#X connect 9 0 10 0;
#X connect 9 0 18 0;
#X connect 11 0 2 0;
#X connect 12 0 6 0;
#X connect 12 0 8 0;
#X connect 12 1 6 0;
#X connect 12 1 14 0;
#X connect 12 2 6 0;
#X connect 13 0 16 0;
#X connect 14 0 19 0;
#X connect 14 1 15 0;
#X connect 15 0 13 0;
#X connect 15 1 13 1;
#X connect 15 2 13 2;
#X connect 16 0 17 0;
#X restore 112 401 pd make-setters;
#X obj 201 354 r pointer2msd;
#X obj 112 91 inlet;
#X msg 189 275 mass id \$4 100 \$1 \$2;
#X msg 131 324 link ml \$1 \$2 10 2.5 1.5;
#X connect 0 0 11 0;
#X connect 0 1 10 0;
#X connect 2 0 3 0;
#X connect 4 0 3 0;
#X connect 6 0 7 0;
#X connect 6 1 0 0;
#X connect 6 2 4 0;
#X connect 6 3 2 0;
#X connect 8 0 1 0;
#X connect 9 0 6 0;
#X connect 10 0 1 0;
#X connect 11 0 1 0;
#X restore 60 329 pd generator;
#N canvas 0 0 718 819 activate 0;
#X obj 233 284 msd2D;
#X obj 233 215 r \$0-msd;
#X msg 317 213 infosL;
#X msg 300 256 get linksPos;
#X obj 233 449 gem_masses;
#X obj 313 445 gem_links;
#X msg 167 193 bang \, get massesPos \, get linksPos;
#X obj 177 125 gemhead;
#X obj 233 396 route massesPos linksPos;
#X obj 139 498 gemwin;
#X msg 139 447 create \, 1;
#X msg 139 471 0 \, destroy;
#X msg 315 233 forceX id 200;
#X obj 249 354 s \$0-msd-out;
#X obj 139 425 select 1 0;
#X obj 139 397 tgl 24 0 empty empty GEM 0 -6 0 8 -262144 -1 -1 0 1
;
#X obj 279 301 s \$0-msd-attr;
#X obj 233 510 s masspositions;
#X obj 313 488 s linkspositions;
#X obj 167 69 tgl 15 0 empty empty empty 0 -6 0 8 -262144 -1 -1 1 1
;
#X obj 233 421 spigot;
#X obj 313 421 spigot;
#X text 238 532 sent to the data struct pointers;
#X obj 167 149 t b b;
#X obj 197 172 s pollpos;
#X obj 167 44 inlet data_only;
#X obj 81 316 inlet GEM;
#X obj 341 40 inlet speed;
#X obj 62 378 select 1;
#X msg 62 403 0;
#X obj 80 340 t f f;
#X obj 54 90 select 1;
#X msg 54 115 0;
#X obj 72 52 t f f;
#X msg 225 622 set \$1;
#X msg 56 467 set \$1;
#X obj 231 648 outlet;
#X obj 57 493 outlet;
#X obj 167 92 metro 20;
#X obj 413 395 r \$0-gem-masses-on;
#X obj 413 417 r \$0-gem-links-on;
#X connect 0 0 8 0;
#X connect 0 0 13 0;
#X connect 0 1 16 0;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 6 0 0 0;
#X connect 7 0 23 0;
#X connect 8 0 17 0;
#X connect 8 0 20 0;
#X connect 8 1 18 0;
#X connect 8 1 21 0;
#X connect 10 0 9 0;
#X connect 11 0 9 0;
#X connect 12 0 0 0;
#X connect 14 0 10 0;
#X connect 14 1 11 0;
#X connect 15 0 14 0;
#X connect 15 0 20 1;
#X connect 15 0 21 1;
#X connect 15 0 35 0;
#X connect 19 0 34 0;
#X connect 19 0 38 0;
#X connect 20 0 4 0;
#X connect 21 0 5 0;
#X connect 23 0 6 0;
#X connect 23 1 24 0;
#X connect 25 0 33 0;
#X connect 26 0 30 0;
#X connect 27 0 38 1;
#X connect 28 0 29 0;
#X connect 29 0 19 0;
#X connect 30 0 15 0;
#X connect 30 1 28 0;
#X connect 31 0 32 0;
#X connect 32 0 15 0;
#X connect 33 0 19 0;
#X connect 33 1 31 0;
#X connect 34 0 36 0;
#X connect 35 0 37 0;
#X connect 38 0 23 0;
#X connect 39 0 4 1;
#X connect 40 0 5 1;
#X restore 61 414 pd activate;
#X obj 61 378 tgl 24 0 empty empty GEM 0 -6 0 8 -233017 -1 -1 0 1;
#X obj 97 378 tgl 24 0 empty empty Graphical_Datastructures 0 -6 0
8 -1 -262144 -1 1 1;
#X text 275 306 Press "generate" to generate messages to msd2D and
create the physical model inside.;
#N canvas 0 0 751 433 ignore 0;
#X obj 102 264 print ToMSD;
#X obj 102 234 spigot;
#X obj 139 181 tgl 15 0 empty empty debug 0 -6 0 8 -262144 -1 -1 0
1;
#X obj 102 207 r \$0-msd;
#X obj 281 239 spigot;
#X obj 318 186 tgl 15 0 empty empty debug 0 -6 0 8 -262144 -1 -1 0
1;
#X obj 281 267 print FromMSD;
#X obj 281 212 r \$0-msd-out;
#N canvas 0 0 578 686 setter 0;
#X obj 452 168 mass-set 8;
#X obj 393 207 mass-set 7;
#X obj 317 227 mass-set 6;
#X obj 290 156 mass-set 5;
#X obj 243 172 mass-set 4;
#X obj 185 152 mass-set 3;
#X obj 129 151 mass-set 2;
#X obj 76 155 mass-set 1;
#X obj 36 159 mass-set 0;
#X restore 305 122 pd setter;
#N canvas 0 0 822 675 lsetter 0;
#X obj 36 159 link-set 7;
#X obj 76 155 link-set 6;
#X obj 129 151 link-set 5;
#X obj 185 152 link-set 4;
#X obj 243 172 link-set 3;
#X obj 290 156 link-set 2;
#X obj 317 227 link-set 1;
#X obj 393 207 link-set 0;
#X restore 304 145 pd lsetter;
#X text 288 98 Automatic scripting targets;
#X text 65 66 You can ignore this stuff here \, unless something goes
wrong.;
#X obj 407 239 spigot;
#X obj 444 186 tgl 15 0 empty empty debug 0 -6 0 8 -262144 -1 -1 1
1;
#X obj 407 212 r \$0-msd-attr;
#X obj 407 270 print AttrMSD;
#X obj 532 270 s \$0-msd;
#X msg 532 249 infosL;
#X connect 1 0 0 0;
#X connect 2 0 1 1;
#X connect 3 0 1 0;
#X connect 4 0 6 0;
#X connect 5 0 4 1;
#X connect 7 0 4 0;
#X connect 12 0 15 0;
#X connect 13 0 12 1;
#X connect 14 0 12 0;
#X connect 17 0 16 0;
#X restore 149 517 pd ignore this;
#X floatatom 133 385 5 10 1000 1 frequency - -;
#X text 272 364 Visualization is done using either a GEM OpenGL window
\, or just animate the data structure alone. Better don't use both
at the same time. In GDS-mode you can set the frequency of the internal
metro \, to accelerate or slow down the simulation.;
#X text 274 23 First create structure inside [pd data] using msd_append.
Add mobile masses with black bang \, add fixed masses with the red
bang.;
#X obj 57 24 msd_append;
#X text 273 110 Links are created by selecting at least two masses
in edit mode \, then press "L" to connect those with a link. If you
select more than two masses \, then all possible links between those
masses will get created. Use this to mass-connect masses. :);
#N canvas 0 0 526 412 forces 0;
#X obj 183 333 s \$0-msd;
#X obj 282 273 hsl 128 24 -500 500 0 1 empty empty empty -2 -6 0 8
-262144 -1 -1 6350 1;
#X obj 183 148 vsl 24 128 -500 500 0 1 empty empty empty 0 -8 0 8 -262144
-1 -1 6350 1;
#X msg 183 306 forceY id \$1;
#X msg 279 306 forceX id \$1;
#X obj 183 284 * -1;
#X obj 183 92 tgl 24 0 empty empty constant? 0 -6 0 8 -262144 -1 -1
0 1;
#X obj 279 213 tgl 24 0 empty empty constant? 0 -6 0 8 -262144 -1 -1
0 1;
#X obj 183 123 metro 10;
#X obj 279 244 metro 10;
#X msg 343 243 0;
#X msg 151 122 0;
#X text 118 45 Add some forces to the system.;
#X connect 1 0 4 0;
#X connect 2 0 5 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X connect 5 0 3 0;
#X connect 6 0 8 0;
#X connect 7 0 9 0;
#X connect 8 0 2 0;
#X connect 9 0 1 0;
#X connect 10 0 1 0;
#X connect 11 0 2 0;
#X restore 60 457 pd forces;
#X obj 286 518 tgl 15 0 \$0-gem-masses-on empty gem_m 0 -6 0 8 -233017
-1 -1 0 1;
#X obj 328 518 tgl 15 0 \$0-gem-links-on empty gem_l 0 -6 0 8 -233017
-1 -1 0 1;
#N canvas 84 573 450 300 props 0;
#X obj 117 204 s \$0-msd;
#X obj 117 46 vsl 15 64 0 10 0 0 empty empty D 0 -8 0 8 -262144 -1
-1 0 1;
#X obj 141 46 vsl 15 64 0 1 0 0 empty empty D2 0 -8 0 8 -262144 -1
-1 0 1;
#X obj 90 46 vsl 15 64 0 100 0 0 empty empty K 0 -8 0 8 -262144 -1
-1 0 1;
#X msg 90 175 setK ml \$1;
#X msg 117 151 setD ml \$1;
#X msg 141 122 setD2 ml \$1;
#X text 192 47 Edit properties of Links.;
#X connect 1 0 5 0;
#X connect 2 0 6 0;
#X connect 3 0 4 0;
#X connect 4 0 0 0;
#X connect 5 0 0 0;
#X connect 6 0 0 0;
#X restore 134 458 pd props;
#X text 369 515 Toggle display of masses and links in GEM.;
#X text 273 445 In edit mode and while visualization is active \, you
can move around the masses. The red masses will not receive any other
forces from the model. Use the "forces" and "props" subpatches to change
parameters of links and send forces.;
#X obj 56 114 morelinks;
#X text 271 219 More ways to create links: left-to-right connects masses
from left to right. one2many will connect one mass to many others.
First select the first mass \, the set the toggle to 1 \, after that
select the other masses and set toggle to 0;
#X text 150 47 Clear all:;
#X text 270 181 "L" is only active \, if the green toggle "Key:L" is
set to on. Otherwise use the yellow "link" bang.;
#X text 705 123 Save network to disk:;
#X connect 3 0 7 0;
#X connect 8 0 9 0;
#X connect 8 1 10 0;
#X connect 9 0 8 0;
#X connect 10 0 8 1;
#X connect 13 0 8 2;
