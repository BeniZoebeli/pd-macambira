#N struct help-set-template1 float x float y;
#N canvas 300 3 583 365 12;
#X text 19 263 see also:;
#X obj 137 308 template;
#X obj 112 284 append;
#X obj 170 284 getsize;
#X obj 237 284 setsize;
#X obj 215 308 element;
#X obj 11 308 sublist;
#X obj 78 308 scalar;
#X msg 210 155 next;
#X obj 21 10 get;
#X floatatom 19 173 5 0 0;
#X floatatom 108 181 5 0 0;
#X obj 196 180 pointer;
#X text 273 113 output first scalar in list;
#X text 256 155 output next item;
#X text 262 204 First argument selects template.;
#X text 263 219 Remaining args are names of fields.;
#X obj 11 283 pointer;
#X msg 196 131 traverse pd-help-set-data \, next;
#N canvas 0 0 276 122 help-set-data 1;
#X scalar help-set-template1 39 23 \;;
#X scalar help-set-template1 99 73 \;;
#X restore 377 244 pd help-set-data;
#N canvas 164 72 425 146 help-set-template1 0;
#X obj 41 87 filledpolygon 9 0 1 0 0 20 0 20 30 0 30;
#X obj 60 21 template float x float y;
#X restore 377 266 pd help-set-template1;
#X text 86 10 -- set values in a scalar;
#X obj 19 204 set help-set-template1 x y;
#X text 18 155 x value;
#X text 106 162 y value;
#X obj 79 283 get;
#X text 19 32 "Set" takes a pointer to a scalar in its rightmost inlet
\; the remaining inlets set numeric values of fields. Only the leftmost
inlet is "hot". You can't "set" arrays or sublists. Instead \, you
can get pointers into them using "element" and "sublist" (probably
not working yet) and set individual items.;
#X text 336 342 updated for Pd version 0.35;
#X connect 8 0 12 0;
#X connect 10 0 22 0;
#X connect 11 0 22 1;
#X connect 12 0 22 2;
#X connect 18 0 12 0;
