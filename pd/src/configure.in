dnl Process this file with autoconf to produce a configure script.
AC_INIT(d_arithmetic.c)

AC_SUBST(alsa, yes)
AC_SUBST(jack, no)
AC_SUBST(portaudio, no)
AC_SUBST(binarymode, -m755)
AC_SUBST(PDLIB)
AC_SUBST(MORECFLAGS)
AC_SUBST(EXT)
AC_SUBST(OPT_CFLAGS)
AC_SUBST(USE_OPT_CFLAGS, yes)
AC_SUBST(SYSSRC)
AC_SUBST(STRIPFLAG)
AC_SUBST(GUINAME)
AC_SUBST(GUIFLAGS)
AC_SUBST(OSNUMBER)
AC_SUBST(EXTERNTARGET)

dnl other defaults

dnl check for features

AC_ARG_ENABLE(alsa,     [  --disable-alsa          force disabling ALSA],
    alsa="no")
AC_ARG_ENABLE(jack,     [  --enable-jack           jack audio server],
    jack="yes")
AC_ARG_ENABLE(portaudio,[  --enable-portaudio      portaudio],
    portaudio="yes")
AC_ARG_ENABLE(debug,    [  --enable-debug          debugging support],
    USE_OPT_CFLAGS="no")
AC_ARG_ENABLE(static,   [  --enable-static         link statically],
    static=yes)
AC_ARG_ENABLE(setuid,   [  --enable-setuid         install as setuid (linux)],
    setuid=yes)
    
dnl Checks for programs.
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_MAKE_SET
AC_PROG_CPP

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_HEADER_TIME

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h limits.h malloc.h sys/ioctl.h sys/time.h unistd.h bstring.h)

dnl Checks for library functions.
AC_PROG_GCC_TRADITIONAL
AC_TYPE_SIGNAL
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(gettimeofday select socket strerror)


dnl Checks for libraries.
dnl Checking for `dlopen' function in -ldl:
AC_CHECK_LIB(dl, dlopen,PDLIB="$PDLIB -ldl",
                 echo "dynamic link support required" || exit 1)

dnl Checking for `sin' function in -lffm:
dnl ffm is the fast math library on the alpha
AC_CHECK_LIB(ffm, sin,PDLIB="$PDLIB -lffm")

dnl Checking for `sin' function in -lm:
AC_CHECK_LIB(m, sin,PDLIB="$PDLIB -lm",
	         echo "math library required" || exit 1)

dnl Checking for `pthread_create' function in -pthread
AC_CHECK_LIB(pthread, pthread_create,PDLIB="$PDLIB -lpthread",
         echo "pthreads required" || exit 1)


dnl Find paths to includes and libraries for X11
AC_PATH_X
dnl Checking for `XCreateWindow' function in -lX11:
AC_CHECK_LIB(X11, XCreateWindow, LIBS="$LIBS -lX11 -L$x_libraries", 
	echo "no X11 found" || exit 1, -L$x_libraries)

dnl look for tcl 8.x... do I really have to go through all this!?

foundit=no
if test $foundit == "no";
then
    AC_CHECK_HEADER(tcl.h,foundit=yes,)
fi
if test $foundit == "no";
then
    AC_CHECK_HEADER(tcl8.7/tcl.h,
    	GUIFLAGS="$GUIFLAGS -I/usr/include/tcl8.7";foundit=yes,)
fi
if test $foundit == "no";
then
    AC_CHECK_HEADER(tcl8.6/tcl.h,
    	GUIFLAGS="$GUIFLAGS -I/usr/include/tcl8.6";foundit=yes,)
fi
if test $foundit == "no";
then
    AC_CHECK_HEADER(tcl8.5/tcl.h,
    	GUIFLAGS="$GUIFLAGS -I/usr/include/tcl8.5";foundit=yes,)
fi
if test $foundit == "no";
then
    AC_CHECK_HEADER(tcl8.4/tcl.h,
    	GUIFLAGS="$GUIFLAGS -I/usr/include/tcl8.4";foundit=yes,)
fi
if test $foundit == "no";
then
    AC_CHECK_HEADER(tcl8.3/tcl.h,
    	GUIFLAGS="$GUIFLAGS -I/usr/include/tcl8.3";foundit=yes,)
fi
if test $foundit == "no";
then
    AC_CHECK_HEADER(tcl8.2/tcl.h,
    	GUIFLAGS="$GUIFLAGS -I/usr/include/tcl8.2";foundit=yes,)
fi
if test $foundit == "no";
then
    echo no tcl header found
    exit -1
fi

AC_CHECK_LIB(tcl8.7, main,,
    AC_CHECK_LIB(tcl8.6, main,,
	AC_CHECK_LIB(tcl8.5, main,,
	    AC_CHECK_LIB(tcl8.4, main,,
		AC_CHECK_LIB(tcl8.3, main,,
		    AC_CHECK_LIB(tcl8.2, main,,
        		AC_CHECK_LIB(tcl8.0, main,,echo no tcl library found || exit 1)))))))

AC_CHECK_LIB(tk8.7, main,,
    AC_CHECK_LIB(tk8.6, main,,
	AC_CHECK_LIB(tk8.5, main,,
	    AC_CHECK_LIB(tk8.4, main,,
		AC_CHECK_LIB(tk8.3, main,,
		    AC_CHECK_LIB(tk8.2, main,,
        		AC_CHECK_LIB(tk8.0, main,,echo no tk library found || exit 1)))))))


if test `uname -s` = Linux;
then
    dnl Ckecking for ALSA

dnl This should be fixed so Pd can use ALSA shared libraries where appropriate.
    if test x$alsa == xyes; then
	echo yes ... alsa is... $alsa
	AC_CHECK_LIB(asound,snd_pcm_info,PDLIB="$PDLIB -lasound" ; alsa="yes",alsa="no")
    fi

    dnl Checking for JACK

    AC_CHECK_LIB(rt,shm_open,LIBS="$LIBS -lrt")
    AC_CHECK_LIB(jack,jack_set_xrun_callback,LIBS="$LIBS -ljack";jack=xrun,jack=no)
    AC_CHECK_LIB(jack,jack_set_error_function,LIBS="$LIBS -ljack";jack=yes,jack=no)

    LDFLAGS="-Wl,-export-dynamic"
    if test "$static" = "yes"; then 
      LDFLAGS="$LDFLAGS -static"
    fi 
    EXT=pd_linux
    MORECFLAGS="-DDL_OPEN -DPA_USE_OSS -DPA_LITTLE_ENDIAN -DUNIX -DUNISTD\
    	 -DUSEAPI_OSS \
        -I../portaudio/pa_common -I../portaudio/pablio \
        -I../portaudio/portmidi-macosx \
	-fno-strict-aliasing"
    SYSSRC="s_midi_oss.c s_audio_oss.c"
    if test x$alsa == "xyes";
    then
    	SYSSRC=$SYSSRC" s_audio_alsa.c s_audio_alsamm.c"
	MORECFLAGS=$MORECFLAGS" -DPA_USE_ALSA -DUSEAPI_ALSA"
	LDFLAGS=$LDFLAGS" -lasound"
    fi
    if test x$portaudio == "xyes";
    then
    	MORECFLAGS="-DUSEAPI_PORTAUDIO -DPA19 "$MORECFLAGS
	SYSSRC="s_audio_pa.c \
    	s_audio_pablio.c     \
	s_audio_paring.c     \
	../portaudio/pa_common/pa_allocation.c  \
	../portaudio/pa_common/pa_converters.c  \
	../portaudio/pa_common/pa_cpuload.c     \
	../portaudio/pa_common/pa_dither.c      \
	../portaudio/pa_common/pa_front.c       \
	../portaudio/pa_common/pa_process.c     \
	../portaudio/pa_common/pa_skeleton.c    \
	../portaudio/pa_common/pa_stream.c      \
	../portaudio/pa_common/pa_trace.c       \
	../portaudio/pa_unix/pa_unix_hostapis.c \
	../portaudio/pa_unix/pa_unix_util.c     \
	../portaudio/pa_unix_oss/pa_unix_oss.c "$SYSSRC
	if test x$alsa == "xyes";
	then
	    SYSSRC=$SYSSRC" ../portaudio/pa_linux_alsa/pa_linux_alsa.c"
	    MORECFLAGS=$MORECFLAGS" -Wno-error"
    	fi
    fi
    if test x$setuid == "xyes";
    then
    	binarymode="-m4755"
    fi
    STRIPFLAG=-s
    GUINAME="pd-gui"
    if test x$USE_OPT_CFLAGS == "xyes";
    then
	OPT_CFLAGS="-O6 -funroll-loops -fomit-frame-pointer"
    else
	OPT_CFLAGS="-g"
    fi
    echo OPT_CFLAGS --------------- $OPT_CFLAGS
    OSNUMBER=0
fi

if test `uname -s` = Darwin;
then
    LDFLAGS="-Wl -framework CoreAudio \
        -framework AudioUnit -framework AudioToolbox \
        -framework Carbon -framework CoreMIDI"
    EXT=pd_darwin
    MORECFLAGS="-DMACOSX -DUNISTD -I/usr/X11R6/include \
	 -I../portaudio_v18/pa_common -I../portaudio_v18/pablio \
	-I../portmidi_osx \
	-Wno-error \
	-DUSEAPI_PORTAUDIO -DPA_BIG_ENDIAN"
    SYSSRC="s_midi_pm.c s_audio_pa.c \
    	s_audio_pablio.c     \
	s_audio_paring.c     \
	../portaudio_v18/pa_common/pa_lib.c \
	../portaudio_v18/pa_common/pa_trace.c \
	../portaudio_v18/pa_common/pa_convert.c \
	../portaudio_v18/pa_mac_core/pa_mac_core.c \
        ../portmidi_osx/pmdarwin.c \
        ../portmidi_osx/pmmacosx.c \
        ../portmidi_osx/pmutil.c \
        ../portmidi_osx/portmidi.c \
        ../portmidi_osx/ptdarwin.c "
    STRIPFLAG=""
    GUINAME="pdtcl"
    GUIFLAGS="-F../../Frameworks -framework Tcl -framework Tk \
        -I../../Frameworks/Tk.framework/Versions/Current/Headers \
        -I../../Frameworks/Tcl.framework/Versions/Current/Headers \
        -I../../Frameworks/Tcl.framework/Versions/8.4/PrivateHeaders"
    if test x$USE_OPT_CFLAGS == "xyes";
    then
	OPT_CFLAGS="-O2"
    else
	OPT_CFLAGS="-g"
    fi
    OSNUMBER=2
    EXTERNTARGET=pd_darwin
    if test x$jack == "xyes";
    then
    	LDFLAGS=$LDFLAGS" -framework Jack"
	MORECFLAGS=$MORECFLAGS" -DUSEAPI_JACK"
	SYSSRC=$SYSSRC" s_audio_jack.c"
    fi
fi

# support for jack, on either linux or darwin:

if test x$jack == "xyes";
then
    MORECFLAGS=$MORECFLAGS" -DUSEAPI_JACK"
    SYSSRC=$SYSSRC" s_audio_jack.c"
    LDFLAGS=$LDFLAGS" -lrt -ljack"
fi
if test x$jack == "xrun";
then
    MORECFLAGS=$MORECFLAGS" -DUSEAPI_JACK -DJACK_XRUN"
    SYSSRC=$SYSSRC" s_audio_jack.c"
    LDFLAGS=$LDFLAGS" -lrt -ljack"
fi

# extra flags for alpha machines
if test `uname -m | awk '{print $1}'` = alpha;
then
    MORECFLAGS=$MORECFLAGS" -mieee -mcpu=ev56"
fi

# test for compaq compiler---not sure what this does or how to test it.
if test x$CC == xccc;
then
    MORECFLAGS=$MORECFLAGS"  -g3 -D__COMPAQC__ -arch host"
fi

AC_OUTPUT(makefile)

