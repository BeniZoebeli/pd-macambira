include makefile

current: all

all: gripd.pd_linux joystickmodule.so midimodule.so

LINUXCFLAGS = -DPD -O2 -funroll-loops -fomit-frame-pointer \
    -Wall -W -Wshadow -Wstrict-prototypes -Werror \
    -Wno-unused -Wno-parentheses -Wno-switch
MIDIDEFINES = -D$(MIDIOSSUBTYPE) -DLINUX
MIDICOMPILEFLAGS  = -O6 -I./midiio/include $(MIDIDEFINES)
MIDILINKFLAGS = -L$(SYSTEMLIBDIR) -lpthread -L./midiio/lib -lmidiio
ifeq ($(MIDIOSSUBTYPE), ALSA)
MIDILINKFLAGS += -lasound
endif

gripd.pd_linux:
	cc $(LINUXCFLAGS) $(PDINCLUDE) -o gripd.o -c gripd.c
	ld -export_dynamic -lm  -shared -o gripd.pd_linux gripd.o -lc -lm
	strip --strip-unneeded gripd.pd_linux
	cp gripd.pd_linux ..

joystickmodule.so:
ifeq ($(JOYSTICK), TRUE)
	cc -c joystick.c
	cc $(LINUXPYTHONINCLUDE) -c -DHAVE_CONFIG_H joystick_wrap.c
	ld -shared joystick.o joystick_wrap.o -o joystickmodule.so
	cp joystickmodule.so ..
endif
	echo "joystick = "$(JOYSTICK) > ../gripd.opt

midimodule.so:
ifeq ($(MIDI), TRUE)
	make -f Makefile.midiioLibrary.$(MIDIOSSUBTYPE)
	g++ -c $(MIDICOMPILEFLAGS) midi.cpp
	g++ $(LINUXPYTHONINCLUDE) -c -DHAVE_CONFIG_H midi_wrap.c
	g++ -shared midi.o midi_wrap.o $(MIDILINKFLAGS) -o midimodule.so
	cp midimodule.so ..
endif
	echo "midi = "$(MIDI) >> ../gripd.opt

linux_clean:
	rm *.o
	rm gripd.pd_linux
	rm joystickmodule.so
	rm midimodule.so
	make -f Makefile.midiioLibrary.$(MIDIOSSUBTYPE) clean

