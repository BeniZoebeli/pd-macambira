# Microsoft Developer Studio Generated NMAKE File, Based on midiio.dsp
!IF "$(CFG)" == ""
CFG = midiio - Win32 Release
!ENDIF 

!IF "$(CFG)" != "midiio - Win32 Release" && "$(CFG)" != "midiio - Win32 Debug"
!MESSAGE Invalid configuration "$(CFG)" specified.
!MESSAGE You can specify a configuration when running NMAKE
!MESSAGE by defining the macro CFG on the command line. For example:
!MESSAGE 
!MESSAGE NMAKE /f "midiio.mak" CFG="midiio - Win32 Debug"
!MESSAGE 
!MESSAGE Possible choices for configuration are:
!MESSAGE 
!MESSAGE "midiio - Win32 Release" (based on "Win32 (x86) Static Library")
!MESSAGE "midiio - Win32 Debug" (based on "Win32 (x86) Static Library")
!MESSAGE 
!ERROR An invalid configuration is specified.
!ENDIF 

!IF "$(OS)" == "Windows_NT"
NULL=
!ELSE 
NULL=nul
!ENDIF 

!IF  "$(CFG)" == "midiio - Win32 Release"

OUTDIR=.\midiio\lib
INTDIR=.\midiio\obj
# Begin Custom Macros
OutDir=.\midiio\lib
# End Custom Macros

ALL : "$(OUTDIR)\midiio.lib"


CLEAN :
	-@erase "$(INTDIR)\Array.obj"
	-@erase "$(INTDIR)\CircularBuffer.obj"
	-@erase "$(INTDIR)\Collection.obj"
	-@erase "$(INTDIR)\FileIO.obj"
	-@erase "$(INTDIR)\MidiFile.obj"
	-@erase "$(INTDIR)\MidiFileWrite.obj"
	-@erase "$(INTDIR)\MidiInPort_alsa.obj"
	-@erase "$(INTDIR)\MidiInPort_alsa05.obj"
	-@erase "$(INTDIR)\MidiInPort_linux.obj"
	-@erase "$(INTDIR)\MidiInPort_oss.obj"
	-@erase "$(INTDIR)\MidiInPort_unsupported.obj"
	-@erase "$(INTDIR)\MidiInPort_visual.obj"
	-@erase "$(INTDIR)\MidiInput.obj"
	-@erase "$(INTDIR)\MidiIO.obj"
	-@erase "$(INTDIR)\MidiMessage.obj"
	-@erase "$(INTDIR)\MidiOutPort_alsa.obj"
	-@erase "$(INTDIR)\MidiOutPort_linux.obj"
	-@erase "$(INTDIR)\MidiOutPort_oss.obj"
	-@erase "$(INTDIR)\MidiOutPort_unsupported.obj"
	-@erase "$(INTDIR)\MidiOutPort_visual.obj"
	-@erase "$(INTDIR)\MidiOutput.obj"
	-@erase "$(INTDIR)\MidiPort.obj"
	-@erase "$(INTDIR)\Options.obj"
	-@erase "$(INTDIR)\Options_private.obj"
	-@erase "$(INTDIR)\Sequencer_alsa.obj"
	-@erase "$(INTDIR)\Sequencer_alsa05.obj"
	-@erase "$(INTDIR)\Sequencer_oss.obj"
	-@erase "$(INTDIR)\SigTimer.obj"
	-@erase "$(INTDIR)\vc60.idb"
	-@erase "$(INTDIR)\Voice.obj"
	-@erase "$(INTDIR)\midiio.pch"
	-@erase "$(OUTDIR)\midiio.lib"

"$(OUTDIR)" :
    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"

CPP=cl.exe
CPP_PROJ=/nologo /ML /W3 /GX /O2 /I ".\midiio\include" /D "WIN32" /D "NDEBUG" /D "_MBCS" /D "_LIB" /D "VISUAL" /Fp"$(INTDIR)\midiio.pch" /YX /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c 

.c{$(INTDIR)}.obj::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<

.cpp{$(INTDIR)}.obj::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<

.cxx{$(INTDIR)}.obj::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<

.c{$(INTDIR)}.sbr::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<

.cpp{$(INTDIR)}.sbr::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<

.cxx{$(INTDIR)}.sbr::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<

RSC=rc.exe
BSC32=bscmake.exe
BSC32_FLAGS=/nologo /o"$(OUTDIR)\midiio.bsc" 
BSC32_SBRS= \
	
LIB32=link.exe -lib
LIB32_FLAGS=/nologo /out:"$(OUTDIR)\midiio.lib" 
LIB32_OBJS= \
	"$(INTDIR)\Array.obj" \
	"$(INTDIR)\CircularBuffer.obj" \
	"$(INTDIR)\Collection.obj" \
	"$(INTDIR)\FileIO.obj" \
	"$(INTDIR)\MidiFile.obj" \
	"$(INTDIR)\MidiFileWrite.obj" \
	"$(INTDIR)\MidiInPort_alsa.obj" \
	"$(INTDIR)\MidiInPort_alsa05.obj" \
	"$(INTDIR)\MidiInPort_linux.obj" \
	"$(INTDIR)\MidiInPort_oss.obj" \
	"$(INTDIR)\MidiInPort_unsupported.obj" \
	"$(INTDIR)\MidiInPort_visual.obj" \
	"$(INTDIR)\MidiInput.obj" \
	"$(INTDIR)\MidiIO.obj" \
	"$(INTDIR)\MidiMessage.obj" \
	"$(INTDIR)\MidiOutPort_alsa.obj" \
	"$(INTDIR)\MidiOutPort_linux.obj" \
	"$(INTDIR)\MidiOutPort_oss.obj" \
	"$(INTDIR)\MidiOutPort_unsupported.obj" \
	"$(INTDIR)\MidiOutPort_visual.obj" \
	"$(INTDIR)\MidiOutput.obj" \
	"$(INTDIR)\MidiPort.obj" \
	"$(INTDIR)\Options.obj" \
	"$(INTDIR)\Options_private.obj" \
	"$(INTDIR)\Sequencer_alsa.obj" \
	"$(INTDIR)\Sequencer_alsa05.obj" \
	"$(INTDIR)\Sequencer_oss.obj" \
	"$(INTDIR)\SigTimer.obj" \
	"$(INTDIR)\Voice.obj"

"$(OUTDIR)\midiio.lib" : "$(OUTDIR)" $(DEF_FILE) $(LIB32_OBJS)
    $(LIB32) @<<
  $(LIB32_FLAGS) $(DEF_FLAGS) $(LIB32_OBJS)
<<

!ELSEIF  "$(CFG)" == "midiio - Win32 Debug"

OUTDIR=.\Debug
INTDIR=.\Debug
# Begin Custom Macros
OutDir=.\Debug
# End Custom Macros

ALL : "$(OUTDIR)\midiio.lib"


CLEAN :
	-@erase "$(INTDIR)\Array.obj"
	-@erase "$(INTDIR)\CircularBuffer.obj"
	-@erase "$(INTDIR)\Collection.obj"
	-@erase "$(INTDIR)\FileIO.obj"
	-@erase "$(INTDIR)\MidiFile.obj"
	-@erase "$(INTDIR)\MidiFileWrite.obj"
	-@erase "$(INTDIR)\MidiInPort_alsa.obj"
	-@erase "$(INTDIR)\MidiInPort_alsa05.obj"
	-@erase "$(INTDIR)\MidiInPort_linux.obj"
	-@erase "$(INTDIR)\MidiInPort_oss.obj"
	-@erase "$(INTDIR)\MidiInPort_unsupported.obj"
	-@erase "$(INTDIR)\MidiInPort_visual.obj"
	-@erase "$(INTDIR)\MidiInput.obj"
	-@erase "$(INTDIR)\MidiIO.obj"
	-@erase "$(INTDIR)\MidiMessage.obj"
	-@erase "$(INTDIR)\MidiOutPort_alsa.obj"
	-@erase "$(INTDIR)\MidiOutPort_linux.obj"
	-@erase "$(INTDIR)\MidiOutPort_oss.obj"
	-@erase "$(INTDIR)\MidiOutPort_unsupported.obj"
	-@erase "$(INTDIR)\MidiOutPort_visual.obj"
	-@erase "$(INTDIR)\MidiOutput.obj"
	-@erase "$(INTDIR)\MidiPort.obj"
	-@erase "$(INTDIR)\Options.obj"
	-@erase "$(INTDIR)\Options_private.obj"
	-@erase "$(INTDIR)\Sequencer_alsa.obj"
	-@erase "$(INTDIR)\Sequencer_alsa05.obj"
	-@erase "$(INTDIR)\Sequencer_oss.obj"
	-@erase "$(INTDIR)\SigTimer.obj"
	-@erase "$(INTDIR)\vc60.idb"
	-@erase "$(INTDIR)\vc60.pdb"
	-@erase "$(INTDIR)\Voice.obj"
	-@erase "$(OUTDIR)\midiio.lib"

"$(OUTDIR)" :
    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"

CPP=cl.exe
CPP_PROJ=/nologo /MLd /W3 /Gm /GX /ZI /Od /I ".\midiio\include" /D "VISUAL" /D "WIN32" /D "_DEBUG" /D "_MBCS" /D "_LIB" /Fp"$(INTDIR)\midiio.pch" /YX /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /GZ /c 

.c{$(INTDIR)}.obj::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<

.cpp{$(INTDIR)}.obj::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<

.cxx{$(INTDIR)}.obj::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<

.c{$(INTDIR)}.sbr::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<

.cpp{$(INTDIR)}.sbr::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<

.cxx{$(INTDIR)}.sbr::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<

RSC=rc.exe
BSC32=bscmake.exe
BSC32_FLAGS=/nologo /o"$(OUTDIR)\midiio.bsc" 
BSC32_SBRS= \
	
LIB32=link.exe -lib
LIB32_FLAGS=/nologo /out:"$(OUTDIR)\midiio.lib" 
LIB32_OBJS= \
	"$(INTDIR)\Array.obj" \
	"$(INTDIR)\CircularBuffer.obj" \
	"$(INTDIR)\Collection.obj" \
	"$(INTDIR)\FileIO.obj" \
	"$(INTDIR)\MidiFile.obj" \
	"$(INTDIR)\MidiFileWrite.obj" \
	"$(INTDIR)\MidiInPort_alsa.obj" \
	"$(INTDIR)\MidiInPort_alsa05.obj" \
	"$(INTDIR)\MidiInPort_linux.obj" \
	"$(INTDIR)\MidiInPort_oss.obj" \
	"$(INTDIR)\MidiInPort_unsupported.obj" \
	"$(INTDIR)\MidiInPort_visual.obj" \
	"$(INTDIR)\MidiInput.obj" \
	"$(INTDIR)\MidiIO.obj" \
	"$(INTDIR)\MidiMessage.obj" \
	"$(INTDIR)\MidiOutPort_alsa.obj" \
	"$(INTDIR)\MidiOutPort_linux.obj" \
	"$(INTDIR)\MidiOutPort_oss.obj" \
	"$(INTDIR)\MidiOutPort_unsupported.obj" \
	"$(INTDIR)\MidiOutPort_visual.obj" \
	"$(INTDIR)\MidiOutput.obj" \
	"$(INTDIR)\MidiPort.obj" \
	"$(INTDIR)\Options.obj" \
	"$(INTDIR)\Options_private.obj" \
	"$(INTDIR)\Sequencer_alsa.obj" \
	"$(INTDIR)\Sequencer_alsa05.obj" \
	"$(INTDIR)\Sequencer_oss.obj" \
	"$(INTDIR)\SigTimer.obj" \
	"$(INTDIR)\Voice.obj"

"$(OUTDIR)\midiio.lib" : "$(OUTDIR)" $(DEF_FILE) $(LIB32_OBJS)
    $(LIB32) @<<
  $(LIB32_FLAGS) $(DEF_FLAGS) $(LIB32_OBJS)
<<

!ENDIF 


!IF "$(NO_EXTERNAL_DEPS)" != "1"
!IF EXISTS("midiiolib.dep")
!INCLUDE "midiiolib.dep"
!ENDIF 
!ENDIF 


!IF "$(CFG)" == "midiio - Win32 Release" || "$(CFG)" == "midiio - Win32 Debug"
SOURCE=".\midiio\include\Array.cpp"

"$(INTDIR)\Array.obj" : $(SOURCE) "$(INTDIR)" ".\midiio\include\Collection.cpp"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=".\midiio\include\CircularBuffer.cpp"

"$(INTDIR)\CircularBuffer.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=".\midiio\include\Collection.cpp"

"$(INTDIR)\Collection.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=".\midiio\src\FileIO.cpp"

"$(INTDIR)\FileIO.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=".\midiio\src\MidiFile.cpp"

"$(INTDIR)\MidiFile.obj" : $(SOURCE) "$(INTDIR)" ".\midiio\include\Array.cpp" ".\midiio\include\Collection.cpp"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=".\midiio\src\MidiFileWrite.cpp"

"$(INTDIR)\MidiFileWrite.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=".\midiio\src\MidiInPort_alsa.cpp"

"$(INTDIR)\MidiInPort_alsa.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=".\midiio\src\MidiInPort_alsa05.cpp"

"$(INTDIR)\MidiInPort_alsa05.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=".\midiio\src\MidiInPort_linux.cpp"

"$(INTDIR)\MidiInPort_linux.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=".\midiio\src\MidiInPort_oss.cpp"

"$(INTDIR)\MidiInPort_oss.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=".\midiio\src\MidiInPort_unsupported.cpp"

"$(INTDIR)\MidiInPort_unsupported.obj" : $(SOURCE) "$(INTDIR)" ".\midiio\include\CircularBuffer.cpp"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=".\midiio\src\MidiInPort_visual.cpp"

"$(INTDIR)\MidiInPort_visual.obj" : $(SOURCE) "$(INTDIR)" ".\midiio\include\Array.cpp" ".\midiio\include\Collection.cpp"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=".\midiio\src\MidiInput.cpp"

"$(INTDIR)\MidiInput.obj" : $(SOURCE) "$(INTDIR)" ".\midiio\include\Array.cpp" ".\midiio\include\Collection.cpp"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=".\midiio\src\MidiIO.cpp"

"$(INTDIR)\MidiIO.obj" : $(SOURCE) "$(INTDIR)" ".\midiio\include\Array.cpp" ".\midiio\include\Collection.cpp"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=".\midiio\src\MidiMessage.cpp"

"$(INTDIR)\MidiMessage.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=".\midiio\src\MidiOutPort_alsa.cpp"

"$(INTDIR)\MidiOutPort_alsa.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=".\midiio\src\MidiOutPort_linux.cpp"

"$(INTDIR)\MidiOutPort_linux.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=".\midiio\src\MidiOutPort_oss.cpp"

"$(INTDIR)\MidiOutPort_oss.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=".\midiio\src\MidiOutPort_unsupported.cpp"

"$(INTDIR)\MidiOutPort_unsupported.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=".\midiio\src\MidiOutPort_visual.cpp"

"$(INTDIR)\MidiOutPort_visual.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=".\midiio\src\MidiOutput.cpp"

"$(INTDIR)\MidiOutput.obj" : $(SOURCE) "$(INTDIR)" ".\midiio\include\Array.cpp" ".\midiio\include\Collection.cpp"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=".\midiio\src\MidiPort.cpp"

"$(INTDIR)\MidiPort.obj" : $(SOURCE) "$(INTDIR)" ".\midiio\include\Array.cpp" ".\midiio\include\Collection.cpp"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=".\midiio\src\Options.cpp"

"$(INTDIR)\Options.obj" : $(SOURCE) "$(INTDIR)" ".\midiio\include\Array.cpp" ".\midiio\include\Collection.cpp"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=".\midiio\src\Options_private.cpp"

"$(INTDIR)\Options_private.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=".\midiio\src\Sequencer_alsa.cpp"

"$(INTDIR)\Sequencer_alsa.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=".\midiio\src\Sequencer_alsa05.cpp"

"$(INTDIR)\Sequencer_alsa05.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=".\midiio\src\Sequencer_oss.cpp"

"$(INTDIR)\Sequencer_oss.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=".\midiio\src\SigTimer.cpp"

"$(INTDIR)\SigTimer.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=".\midiio\src\Voice.cpp"

"$(INTDIR)\Voice.obj" : $(SOURCE) "$(INTDIR)" ".\midiio\include\Array.cpp" ".\midiio\include\Collection.cpp"
	$(CPP) $(CPP_PROJ) $(SOURCE)



!ENDIF 

