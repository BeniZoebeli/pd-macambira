#N canvas 405 191 1017 621 10;
#X obj 12 11 inlet;
#X obj 111 584 outlet;
#X text 5 93 RRADICAL_MEMENTO is also in originator;
#X obj 111 557 list;
#X obj 750 392 spigot 1;
#X msg 880 375 0;
#X obj 520 166 unpack f f;
#X text 629 515 Have an [OSCroute \$1-normalized] and leave the regular
[OSCroute \$1] directly connected. Yes. Do that after this is confirmed
working!;
#X obj 191 335 expr_scale 0 1 \$3 \$4;
#X obj 254 388 expr_scale 0 1 \$3 \$4;
#X obj 241 473 hotpack f f;
#X obj 766 26 loadbang;
#X msg 766 127 1;
#X obj -24 509 demultiplex;
#X obj 39 534 round;
#X obj 73 482 expr_scale 0 1 \$3 \$4;
#X obj 156 11 inlet;
#X obj 286 11 inlet;
#X text 628 559 Use to constrain input to a smaller subset of the full
range. Input as relative to 0-1. Reports back what the result will
be when scaled fully;
#X obj 156 59 s \$0boundLowFull;
#X obj 286 59 s \$0boundHighFull;
#X obj 520 210 s \$0constrainLow;
#X obj 577 188 s \$0constrainHigh;
#X obj 281 227 r \$0boundLowFull;
#X obj 331 248 r \$0boundHighFull;
#X obj 191 306 r \$0constrainLow;
#X obj 254 357 r \$0constrainHigh;
#X obj 456 30 loadbang;
#X msg 456 55 0 1;
#X obj 331 273 t b a;
#X obj 281 273 t b a;
#X obj 520 125 list;
#X obj 571 125 t a a;
#X obj 520 97 route get;
#X obj 241 497 t a a;
#X text 318 466 Allows one to replace the scaled output with something
prettier;
#X text 502 274 Used to recall the 0-1 ranged constraint;
#X obj 766 102 sel round hide;
#X obj 766 149 s \$0round?;
#X obj 0 483 r \$0round?;
#X obj -24 534 t a;
#X obj 766 78 list-drip;
#X obj 835 149 s \$0hide?;
#X obj 766 53 list append \$5 \$6;
#X obj 880 352 r \$0hide?;
#X text 38 193 Read \$1-OSC (== \$0-OSC) \, filter by argument \$2
;
#X obj 153 171 deeprouteOSC \$2-normalized;
#X obj 30 172 deeprouteOSC \$2;
#X obj 30 148 r \$1-RRADICAL-OSC;
#X obj 153 148 r \$1-RRADICAL-OSC;
#X obj 12 42 prepent \$2;
#X obj 12 69 s \$1-RRADICAL-MEMENTO;
#X obj 520 30 r \$1-RRADICAL-OSC;
#X obj 504 255 s \$1-COMMUN-RESPONSE;
#X obj 750 362 r \$1/listParams;
#X obj 750 449 s \$1/returnParams;
#X obj 295 497 s \$1\$2/constraint/lookup/call;
#X obj 295 517 r \$1\$2/constraint/lookup/response;
#X obj 268 580 s \$1-COMMUN-RESPONSE;
#X obj 111 532 route \$2;
#X obj 111 505 r \$1-in;
#X obj 750 419 list append \$2;
#X obj 520 53 deeprouteOSC \$2-constrain;
#X obj 268 559 prepent \$2-constrained-to;
#X obj 504 234 prepent \$2-constrained-to-0-1;
#X text 585 78 Save the constraints;
#X obj 587 97 commun \$2-constraints \$1;
#X connect 0 0 50 0;
#X connect 3 0 1 0;
#X connect 4 0 61 0;
#X connect 5 0 4 1;
#X connect 6 0 21 0;
#X connect 6 1 22 0;
#X connect 8 0 10 0;
#X connect 8 0 15 3;
#X connect 9 0 10 1;
#X connect 9 0 15 4;
#X connect 10 0 34 0;
#X connect 11 0 43 0;
#X connect 12 0 38 0;
#X connect 13 0 40 0;
#X connect 13 1 14 0;
#X connect 14 0 40 0;
#X connect 15 0 13 0;
#X connect 16 0 19 0;
#X connect 17 0 20 0;
#X connect 23 0 30 0;
#X connect 24 0 29 0;
#X connect 25 0 8 0;
#X connect 26 0 9 0;
#X connect 27 0 28 0;
#X connect 28 0 6 0;
#X connect 29 0 9 0;
#X connect 29 1 9 4;
#X connect 29 1 8 4;
#X connect 30 0 8 0;
#X connect 30 1 9 3;
#X connect 30 1 8 3;
#X connect 31 0 6 0;
#X connect 31 0 64 0;
#X connect 32 0 6 0;
#X connect 32 1 31 1;
#X connect 33 0 31 0;
#X connect 33 1 32 0;
#X connect 33 1 66 0;
#X connect 34 0 56 0;
#X connect 34 1 63 0;
#X connect 37 0 12 0;
#X connect 37 1 42 0;
#X connect 39 0 13 1;
#X connect 40 0 3 0;
#X connect 41 0 37 0;
#X connect 43 0 41 0;
#X connect 44 0 5 0;
#X connect 46 0 15 0;
#X connect 47 0 15 0;
#X connect 48 0 47 0;
#X connect 49 0 46 0;
#X connect 50 0 51 0;
#X connect 52 0 62 0;
#X connect 54 0 4 0;
#X connect 57 0 63 0;
#X connect 59 0 3 0;
#X connect 60 0 59 0;
#X connect 61 0 55 0;
#X connect 62 0 33 0;
#X connect 63 0 58 0;
#X connect 64 0 53 0;
#X connect 66 0 32 0;
