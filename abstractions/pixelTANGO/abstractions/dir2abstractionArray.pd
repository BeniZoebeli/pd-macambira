#N canvas 393 22 707 710 10;
#X obj 362 408 + 10;
#X obj 365 363 t f f;
#X obj 392 341 + 1;
#X obj 336 318 t a b;
#X obj 360 341 f 0;
#X msg 382 318 0;
#X text 453 221 reset;
#X obj 409 437 f \$0;
#X obj 362 387 * 120;
#X obj 455 240 loadbang;
#X obj 336 297 stripExtension;
#X obj 18 167 inlet;
#X obj 28 190 s \$0-in;
#X obj 28 403 r \$0-out;
#X obj 18 426 outlet;
#X obj 241 115 inlet;
#X obj 467 314 makesymbol pd-%s-array;
#X obj 467 294 f \$0;
#N canvas 198 331 842 530 1590-array 0;
#X restore 19 455 pd \$0-array;
#X obj 313 158 t a b;
#X obj 464 178 s \$0-selector;
#X obj 446 149 inlet;
#X obj 525 441 outlet;
#X text 281 114 which Abst to route through?;
#X text 528 459 List of options;
#X obj 525 421 prepend Passthrough;
#X obj 18 373 spigot;
#X msg 363 182 1;
#X obj 430 178 == 0;
#X obj 382 437 + 1;
#X obj 106 167 inlet;
#X obj 106 426 outlet;
#X obj 106 373 spigot;
#X obj 116 190 s \$0-in2;
#X obj 116 403 r \$0-out2;
#X obj 241 631 makesymbol pd-%s-array;
#X msg 241 651 \; \$1 clear;
#X obj 241 611 f \$0;
#X obj 241 186 route clear;
#X obj 336 470 pack s f f f s f;
#X obj 443 437 f \$1;
#X obj 456 262 t b b b;
#X msg 336 496 \; \$5 obj \$2 10 \$1 \$3 \$4 \$6;
#X text 14 10 This abstraction takes a glob pattern in a directory
and creates an array of the abstractions in that folder in an internal
subpatch called [pd \$0-array]. The abstractions are meant to be routing
objects so they all have a global receive and send \, but only one
abstraction in the array at a time will receive input. The abstractions
must contain at least a arrayRouterIn abstraction to broker the communication.
;
#X obj 313 210 dirlist;
#X msg 313 533 symbol \$1;
#X obj 313 254 drip;
#X obj 313 553 stripPath;
#X obj 313 275 t l l;
#X obj 313 573 makesymbol pd-%s;
#X msg 313 593 \; \$1 loadbang;
#X text 407 600 <- Special Thanks to Roman Haefeli;
#X connect 0 0 39 1;
#X connect 1 0 8 0;
#X connect 1 1 29 0;
#X connect 2 0 4 1;
#X connect 3 0 39 0;
#X connect 3 1 4 0;
#X connect 4 0 2 0;
#X connect 4 0 1 0;
#X connect 5 0 4 1;
#X connect 7 0 39 3;
#X connect 8 0 0 0;
#X connect 9 0 5 0;
#X connect 9 0 27 0;
#X connect 9 0 41 0;
#X connect 10 0 3 0;
#X connect 11 0 12 0;
#X connect 11 0 26 0;
#X connect 13 0 14 0;
#X connect 15 0 19 0;
#X connect 16 0 39 4;
#X connect 17 0 16 0;
#X connect 19 0 38 0;
#X connect 19 1 17 0;
#X connect 19 1 5 0;
#X connect 19 1 27 0;
#X connect 21 0 20 0;
#X connect 21 0 28 0;
#X connect 25 0 22 0;
#X connect 26 0 14 0;
#X connect 27 0 26 1;
#X connect 27 0 32 1;
#X connect 28 0 26 1;
#X connect 28 0 32 1;
#X connect 29 0 39 2;
#X connect 30 0 32 0;
#X connect 30 0 33 0;
#X connect 32 0 31 0;
#X connect 34 0 31 0;
#X connect 35 0 36 0;
#X connect 37 0 35 0;
#X connect 38 0 37 0;
#X connect 38 1 44 0;
#X connect 39 0 42 0;
#X connect 40 0 39 5;
#X connect 41 0 7 0;
#X connect 41 1 17 0;
#X connect 41 2 40 0;
#X connect 44 0 25 0;
#X connect 44 0 46 0;
#X connect 45 0 47 0;
#X connect 46 0 48 0;
#X connect 47 0 49 0;
#X connect 48 0 45 0;
#X connect 48 1 10 0;
#X connect 49 0 50 0;
