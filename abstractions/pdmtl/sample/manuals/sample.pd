#N canvas 237 73 990 866 10;
#X text 16 105 Sample generators:;
#X obj 82 125 sample/table;
#X obj 83 201 sample/handle;
#X text 28 256 Sample display:;
#X obj 81 398 sample/print;
#X text 170 400 (to complete);
#X obj 82 427 sample/status;
#X text 183 428 (to do);
#X text 11 10 SAMPLE FORMAT MANUAL;
#X obj 79 489 sample/unpack;
#X text 181 493 (to do);
#X text 347 92 To create a sample chain \, you need to start with a
sample generator. They ouput a sample_id every 5 milliseconds.;
#X text 11 27 Description: Describes how to use and develop the sample
format.;
#X text 13 57 Version: 1;
#X text 347 187 Inside of the sample abstractions \, there is a sample/handle
sub abstraction that interprets and parses the sample_id.;
#X text 347 270 Possible states:;
#X text 348 222 Once a sample/handle receives a sample_id \, it connects
to the sample generator that is generating the sample_id and queries
it's status.;
#X text 468 323 1: ready.;
#X text 466 306 0: filling(loading/recording).;
#X text 462 290 -1: not ready/not connected.;
#X text 355 352 Once a sample/handle is connected to a sample generator
\, it automatically receives any changes made to the sample.;
#X text 63 557 -- sample_id details and workings --;
#X text 347 127 You then connect the sample_id output to the first
inlet of other sample abstractions. The first inlet is always reserved
for the sample_id (unless it is a sample generator).;
#X text 545 416 -- sample properties --;
#X text 476 447 frames: the number of frames in the file.;
#X text 478 466 channels: the number of channels (sample currently
only supports mono or stereo files).;
#X text 476 499 samplerate: the samplerate of the original file.;
#X text 477 516 name: the sample name (spaces are converted to /).
;
#X text 476 535 filename: the full patch and name of the file containing
the original sample (can contain spaces).;
#X text 477 565 start: the playback start point in frames (not implemented
yet).;
#X text 475 595 length: the playback length in frames (not implemented
yet).;
#X text 556 659 stereo: (table_id)s0 (table_id)s1;
#X text 555 645 mono: (table_id)s0;
#X text 26 579 A sample_id is simply a float (actually the \$0 argument
of the sample generator abstraction). When sample/handle receives that
float \, it sets a send ((sample_id)ss) and a receive ((sample_id)sr)
that match corresponding send and receive in the sample generator.
sample/handle also has a unique receive ($0sh) that sample/handle uses
to query sample properties. For example \, if sample/handle wants to
know the number of channels of a sample \, it sends the message "f
\$0sh" to tell the sample/generator that the answer to the next query
must be forwared to \$0sh. sample/handle then sends the message "channels".
;
#X text 478 616 table_id: the id of the audio data tables. The actual
names of the tables depend on the number of channels.;
#X text 563 734 mono: (preview_id)p0;
#X text 561 750 stereo: (preview_id)p0 (preview_id)p1;
#X text 25 181 Sample internals:;
#X text 27 464 Sample convert:;
#X obj 84 224 sample/gen;
#X text 478 683 preview_id: the id of the preview tables. The actual
names of the tables depend on the number of channels. A preview table
usualy has a size of 300;
#X text 483 786 preview_size: the size of a preview table.;
#X obj 15 281 sample/display;
#X obj 82 148 sample/record~;
#X text 478 817 gain: how much gain needed to apply to normalize. Most
sample/abstractions normalize the sample playback.;
